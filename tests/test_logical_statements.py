import unittest
import subprocess

# Sample logical statements
logical_statements = [
    ("If a number is divisible by three hundred and eighty, it is even. Seven hundred and sixty is divisible by three hundred and eighty. Therefore, seven hundred and sixty is even.", True, "even(X) :- 0 is X mod 380."),
    ("All cetaceans are mammals. A dolphin is a cetacean. Therefore, a dolphin is a mammal.", True, "mammal(X) :- cetacean(X)."),
    ("If an animal is a bird, it has feathers. An ostrich is a bird. Therefore, an ostrich has feathers.", True, "has_feathers(X) :- bird(X)."),
    ("Every multiple of ninety-three is odd. One hundred and eighty-six is a multiple of ninety-three. Therefore, one hundred and eighty-six is odd.", False, "odd(X) :- 0 is X mod 93, X \= 186."),
    ("If a shape is a pentadecagon, it has fifteen sides. This shape has fifteen sides. Therefore, this shape is a pentadecagon.", True, "pentadecagon(X) :- shape(X), has_fifteen_sides(X)."),
    ("If a number is divisible by three hundred and ninety, it is even. Seven hundred and eighty is divisible by three hundred and ninety. Therefore, seven hundred and eighty is even.", True, "even(X) :- 0 is X mod 390."),
    ("All insects have six legs. A bee is an insect. Therefore, a bee has six legs.", True, "has_six_legs(X) :- insect(X)."),
    ("If an animal is an amphibian, it can live both on land and in water. A frog is an amphibian. Therefore, a frog can live both on land and in water.", True, "lives_on_land_and_water(X) :- amphibian(X)."),
    ("Every multiple of ninety-five is odd. One hundred and ninety is a multiple of ninety-five. Therefore, one hundred and ninety is odd.", False, "odd(X) :- 0 is X mod 95, X \= 190."),
    ("If a shape is a hexadecagon, it has sixteen sides. This shape has sixteen sides. Therefore, this shape is a hexadecagon.", True, "hexadecagon(X) :- shape(X), has_sixteen_sides(X)."),
    ("If a number is divisible by four hundred, it is even. Eight hundred is divisible by four hundred. Therefore, eight hundred is even.", True, "even(X) :- 0 is X mod 400."),
    ("All marsupials have pouches. A kangaroo is a marsupial. Therefore, a kangaroo has a pouch.", True, "has_pouch(X) :- marsupial(X)."),
    ("If an animal is a fish, it lives in water. A goldfish is a fish. Therefore, a goldfish lives in water.", True, "lives_in_water(X) :- fish(X)."),
    ("Every multiple of ninety-seven is odd. One hundred and ninety-four is a multiple of ninety-seven. Therefore, one hundred and ninety-four is odd.", False, "odd(X) :- 0 is X mod 97, X \= 194."),
    ("If a shape is a heptadecagon, it has seventeen sides. This shape has seventeen sides. Therefore, this shape is a heptadecagon.", True, "heptadecagon(X) :- shape(X), has_seventeen_sides(X)."),
    ("If a number is divisible by four hundred and ten, it is even. Eight hundred and twenty is divisible by four hundred and ten. Therefore, eight hundred and twenty is even.", True, "even(X) :- 0 is X mod 410."),
    ("All ungulates have hooves. A horse is an ungulate. Therefore, a horse has hooves.", True, "has_hooves(X) :- ungulate(X)."),
    ("If an animal is a mammal, it has a neocortex. A cat is a mammal. Therefore, a cat has a neocortex.", True, "has_neocortex(X) :- mammal(X)."),
    ("Every multiple of ninety-nine is odd. One hundred and ninety-eight is a multiple of ninety-nine. Therefore, one hundred and ninety-eight is odd.", False, "odd(X) :- 0 is X mod 99, X \= 198."),
    ("If a shape is an octadecagon, it has eighteen sides. This shape has eighteen sides. Therefore, this shape is an octadecagon.", True, "octadecagon(X) :- shape(X), has_eighteen_sides(X)."),
    ("If a number is divisible by four hundred and twenty, it is even. Eight hundred and forty is divisible by four hundred and twenty. Therefore, eight hundred and forty is even.", True, "even(X) :- 0 is X mod 420."),
    ("All primates have opposable thumbs. A chimpanzee is a primate. Therefore, a chimpanzee has opposable thumbs.", True, "has_opposable_thumbs(X) :- primate(X)."),
    ("If an animal is a reptile, it is cold-blooded. A snake is a reptile. Therefore, a snake is cold-blooded.", True, "is_cold_blooded(X) :- reptile(X)."),
    ("Every multiple of one hundred and one is odd. Two hundred and two is a multiple of one hundred and one. Therefore, two hundred and two is odd.", False, "odd(X) :- 0 is X mod 101, X \= 202."),
    ("If a shape is a nonagon, it has nine sides. This shape has nine sides. Therefore, this shape is a nonagon.", True, "nonagon(X) :- shape(X), has_nine_sides(X)."),
    ("If a number is divisible by four hundred and thirty, it is even. Eight hundred and sixty is divisible by four hundred and thirty. Therefore, eight hundred and sixty is even.", True, "even(X) :- 0 is X mod 430."),
    ("All rodents have incisors that never stop growing. A beaver is a rodent. Therefore, a beaver has incisors that never stop growing.", True, "has_growing_incisors(X) :- rodent(X)."),
    ("If an animal is an insect, it has three body parts. A butterfly is an insect. Therefore, a butterfly has three body parts.", True, "has_three_body_parts(X) :- insect(X)."),
    ("Every multiple of one hundred and three is odd. Two hundred and six is a multiple of one hundred and three. Therefore, two hundred and six is odd.", False, "odd(X) :- 0 is X mod 103, X \= 206."),
    ("If a shape is a decagon, it has ten sides. This shape has ten sides. Therefore, this shape is a decagon.", True, "decagon(X) :- shape(X), has_ten_sides(X)."),
    ("If a number is divisible by four hundred and forty, it is even. Eight hundred and eighty is divisible by four hundred and forty. Therefore, eight hundred and eighty is even.", True, "even(X) :- 0 is X mod 440."),
    ("All cetaceans are aquatic mammals. A whale is a cetacean. Therefore, a whale is an aquatic mammal.", True, "aquatic_mammal(X) :- cetacean(X)."),
    ("If an animal is an arachnid, it has eight legs. A spider is an arachnid. Therefore, a spider has eight legs.", True, "has_eight_legs(X) :- arachnid(X)."),
    ("Every multiple of one hundred and five is odd. Two hundred and ten is a multiple of one hundred and five. Therefore, two hundred and ten is odd.", False, "odd(X) :- 0 is X mod 105, X \= 210."),
    ("If a shape is a hendecagon, it has eleven sides. This shape has eleven sides. Therefore, this shape is a hendecagon.", True, "hendecagon(X) :- shape(X), has_eleven_sides(X)."),
    ("If a number is divisible by four hundred and fifty, it is even. Nine hundred is divisible by four hundred and fifty. Therefore, nine hundred is even.", True, "even(X) :- 0 is X mod 450."),
    ("All birds are oviparous. A sparrow is a bird. Therefore, a sparrow is oviparous.", True, "oviparous(X) :- bird(X)."),
    ("If an animal is a mammal, it breathes air. A whale is a mammal. Therefore, a whale breathes air.", True, "breathes_air(X) :- mammal(X)."),
    ("Every multiple of one hundred and seven is odd. Two hundred and fourteen is a multiple of one hundred and seven. Therefore, two hundred and fourteen is odd.", False, "odd(X) :- 0 is X mod 107, X \= 214."),
    ("If a shape is a dodecagon, it has twelve sides. This shape has twelve sides. Therefore, this shape is a dodecagon.", True, "dodecagon(X) :- shape(X), has_twelve_sides(X)."),
    ("If a number is divisible by four hundred and sixty, it is even. Nine hundred and twenty is divisible by four hundred and sixty. Therefore, nine hundred and twenty is even.", True, "even(X) :- 0 is X mod 460."),
    ("All amphibians are vertebrates. A frog is an amphibian. Therefore, a frog is a vertebrate.", True, "vertebrate(X) :- amphibian(X)."),
    ("If an animal is a bird, it can fly. An ostrich is a bird. Therefore, an ostrich can fly.", False, "can_fly(X) :- bird(X), X \= ostrich."),
    ("Every multiple of one hundred and nine is odd. Two hundred and eighteen is a multiple of one hundred and nine. Therefore, two hundred and eighteen is odd.", False, "odd(X) :- 0 is X mod 109, X \= 218."),
    ("If a shape is a tridecagon, it has thirteen sides. This shape has thirteen sides. Therefore, this shape is a tridecagon.", True, "tridecagon(X) :- shape(X), has_thirteen_sides(X)."),
    ("If a number is divisible by four hundred and seventy, it is even. Nine hundred and forty is divisible by four hundred and seventy. Therefore, nine hundred and forty is even.", True, "even(X) :- 0 is X mod 470."),
    ("All mammals are warm-blooded. A bat is a mammal. Therefore, a bat is warm-blooded.", True, "warm_blooded(X) :- mammal(X)."),
    ("If an animal is a fish, it has gills. A shark is a fish. Therefore, a shark has gills.", True, "has_gills(X) :- fish(X)."),
    ("Every multiple of one hundred and eleven is odd. Two hundred and twenty-two is a multiple of one hundred and eleven. Therefore, two hundred and twenty-two is odd.", False, "odd(X) :- 0 is X mod 111, X \= 222."),
    ("If a shape is a tetradecagon, it has fourteen sides. This shape has fourteen sides. Therefore, this shape is a tetradecagon.", True, "tetradecagon(X) :- shape(X), has_fourteen_sides(X)."),
    ("If a number is divisible by four hundred and eighty, it is even. Nine hundred and sixty is divisible by four hundred and eighty. Therefore, nine hundred and sixty is even.", True, "even(X) :- 0 is X mod 480."),
    ("All reptiles lay eggs. A turtle is a reptile. Therefore, a turtle lays eggs.", True, "lays_eggs(X) :- reptile(X)."),
    ("If an animal is a mammal, it has mammary glands. A cow is a mammal. Therefore, a cow has mammary glands.", True, "has_mammary_glands(X) :- mammal(X)."),
    ("Every multiple of one hundred and thirteen is odd. Two hundred and twenty-six is a multiple of one hundred and thirteen. Therefore, two hundred and twenty-six is odd.", False, "odd(X) :- 0 is X mod 113, X \= 226."),
    ("If a shape is a pentadecagon, it has fifteen sides. This shape has fifteen sides. Therefore, this shape is a pentadecagon.", True, "pentadecagon(X) :- shape(X), has_fifteen_sides(X)."),
    ("If a number is divisible by four hundred and ninety, it is even. Nine hundred and eighty is divisible by four hundred and ninety. Therefore, nine hundred and eighty is even.", True, "even(X) :- 0 is X mod 490."),
    ("All insects have six legs. A bee is an insect. Therefore, a bee has six legs.", True, "has_six_legs(X) :- insect(X)."),
    ("If an animal is a reptile, it is cold-blooded. A snake is a reptile. Therefore, a snake is cold-blooded.", True, "cold_blooded(X) :- reptile(X)."),
    ("Every multiple of one hundred and fifteen is odd. Two hundred and thirty is a multiple of one hundred and fifteen. Therefore, two hundred and thirty is odd.", False, "odd(X) :- 0 is X mod 115, X \= 230."),
    ("If a shape is a hexadecagon, it has sixteen sides. This shape has sixteen sides. Therefore, this shape is a hexadecagon.", True, "hexadecagon(X) :- shape(X), has_sixteen_sides(X)."),
    ("If a number is divisible by five hundred, it is even. One thousand is divisible by five hundred. Therefore, one thousand is even.", True, "even(X) :- 0 is X mod 500."),
    ("All dinosaurs are extinct. A tyrannosaurus is a dinosaur. Therefore, a tyrannosaurus is extinct.", True, "extinct(X) :- dinosaur(X)."),
    ("If an animal is an amphibian, it can live both on land and in water. A salamander is an amphibian. Therefore, a salamander can live both on land and in water.", True, "lives_on_land_and_water(X) :- amphibian(X)."),
    ("Every multiple of one hundred and seventeen is odd. Two hundred and thirty-four is a multiple of one hundred and seventeen. Therefore, two hundred and thirty-four is odd.", False, "odd(X) :- 0 is X mod 117, X \= 234."),
    ("If a shape is a heptadecagon, it has seventeen sides. This shape has seventeen sides. Therefore, this shape is a heptadecagon.", True, "heptadecagon(X) :- shape(X), has_seventeen_sides(X)."),
    ("If a number is divisible by five hundred and ten, it is even. One thousand and twenty is divisible by five hundred and ten. Therefore, one thousand and twenty is even.", True, "even(X) :- 0 is X mod 510."),
    ("All marsupials have pouches. A kangaroo is a marsupial. Therefore, a kangaroo has a pouch.", True, "has_pouch(X) :- marsupial(X)."),
    ("If an animal is a cetacean, it lives in water. A dolphin is a cetacean. Therefore, a dolphin lives in water.", True, "lives_in_water(X) :- cetacean(X)."),
    ("Every multiple of one hundred and nineteen is odd. Two hundred and thirty-eight is a multiple of one hundred and nineteen. Therefore, two hundred and thirty-eight is odd.", False, "odd(X) :- 0 is X mod 119, X \= 238."),
    ("If a shape is an octadecagon, it has eighteen sides. This shape has eighteen sides. Therefore, this shape is an octadecagon.", True, "octadecagon(X) :- shape(X), has_eighteen_sides(X)."),
    ("If a number is divisible by five hundred and twenty, it is even. One thousand and forty is divisible by five hundred and twenty. Therefore, one thousand and forty is even.", True, "even(X) :- 0 is X mod 520."),
    ("All primates have opposable thumbs. A chimpanzee is a primate. Therefore, a chimpanzee has opposable thumbs.", True, "has_opposable_thumbs(X) :- primate(X)."),
    ("If an animal is an avian, it has feathers. A parrot is an avian. Therefore, a parrot has feathers.", True, "has_feathers(X) :- avian(X)."),
    ("Every multiple of one hundred and twenty-one is odd. Two hundred and forty-two is a multiple of one hundred and twenty-one. Therefore, two hundred and forty-two is odd.", False, "odd(X) :- 0 is X mod 121, X \= 242."),
    ("If a shape is a nonadecagon, it has nineteen sides. This shape has nineteen sides. Therefore, this shape is a nonadecagon.", True, "nonadecagon(X) :- shape(X), has_nineteen_sides(X)."),
    ("If a number is divisible by five hundred and thirty, it is even. One thousand and sixty is divisible by five hundred and thirty. Therefore, one thousand and sixty is even.", True, "even(X) :- 0 is X mod 530."),
    ("All arthropods have an exoskeleton. A lobster is an arthropod. Therefore, a lobster has an exoskeleton.", True, "has_exoskeleton(X) :- arthropod(X)."),
    ("If an animal is a mammal, it is warm-blooded. A bear is a mammal. Therefore, a bear is warm-blooded.", True, "warm_blooded(X) :- mammal(X)."),
    ("Every multiple of one hundred and twenty-three is odd. Two hundred and forty-six is a multiple of one hundred and twenty-three. Therefore, two hundred and forty-six is odd.", False, "odd(X) :- 0 is X mod 123, X \= 246."),
    ("If a shape is an icosagon, it has twenty sides. This shape has twenty sides. Therefore, this shape is an icosagon.", True, "icosagon(X) :- shape(X), has_twenty_sides(X)."),
    ("If a number is divisible by five hundred and forty, it is even. One thousand and eighty is divisible by five hundred and forty. Therefore, one thousand and eighty is even.", True, "even(X) :- 0 is X mod 540."),
    ("All cnidarians have nematocysts. A jellyfish is a cnidarian. Therefore, a jellyfish has nematocysts.", True, "has_nematocysts(X) :- cnidarian(X)."),
    ("If an animal is an insect, it has antennae. A bee is an insect. Therefore, a bee has antennae.", True, "has_antennae(X) :- insect(X)."),
    ("Every multiple of one hundred and twenty-five is odd. Two hundred and fifty is a multiple of one hundred and twenty-five. Therefore, two hundred and fifty is odd.", False, "odd(X) :- 0 is X mod 125, X \= 250."),
    ("If a shape is an icosikaihenagon, it has twenty-one sides. This shape has twenty-one sides. Therefore, this shape is an icosikaihenagon.", True, "icosikaihenagon(X) :- shape(X), has_twenty_one_sides(X)."),
    ("If a number is divisible by five hundred and fifty, it is even. One thousand and one hundred is divisible by five hundred and fifty. Therefore, one thousand and one hundred is even.", True, "even(X) :- 0 is X mod 550."),
    ("All echinoderms have a fivefold radial symmetry. A starfish is an echinoderm. Therefore, a starfish has a fivefold radial symmetry.", True, "has_fivefold_radial_symmetry(X) :- echinoderm(X)."),
    ("If an animal is a rodent, it has incisors that never stop growing. A capybara is a rodent. Therefore, a capybara has incisors that never stop growing.", True, "has_growing_incisors(X) :- rodent(X)."),
    ("Every multiple of one hundred and twenty-seven is odd. Two hundred and fifty-four is a multiple of one hundred and twenty-seven. Therefore, two hundred and fifty-four is odd.", False, "odd(X) :- 0 is X mod 127, X \= 254."),
    ("If a shape is an icosikaidigon, it has twenty-two sides. This shape has twenty-two sides. Therefore, this shape is an icosikaidigon.", True, "icosikaidigon(X) :- shape(X), has_twenty_two_sides(X)."),
    ("If a number is divisible by five hundred and sixty, it is even. One thousand and one hundred and twenty is divisible by five hundred and sixty. Therefore, one thousand and one hundred and twenty is even.", True, "even(X) :- 0 is X mod 560."),
    ("All gastropods have a muscular foot. A snail is a gastropod. Therefore, a snail has a muscular foot.", True, "has_muscular_foot(X) :- gastropod(X)."),
    ("If an animal is a fish, it has gills. A salmon is a fish. Therefore, a salmon has gills.", True, "has_gills(X) :- fish(X)."),
    ("Every multiple of one hundred and twenty-nine is odd. Two hundred and fifty-eight is a multiple of one hundred and twenty-nine. Therefore, two hundred and fifty-eight is odd.", False, "odd(X) :- 0 is X mod 129, X \= 258."),
    ("If a shape is an icosikaitrigon, it has twenty-three sides. This shape has twenty-three sides. Therefore, this shape is an icosikaitrigon.", True, "icosikaitrigon(X) :- shape(X), has_twenty_three_sides(X)."),
    ("If a number is divisible by five hundred and seventy, it is even. One thousand one hundred and forty is divisible by five hundred and seventy. Therefore, one thousand one hundred and forty is even.", True, "even(X) :- 0 is X mod 570."),
    ("All mammals are vertebrates. A whale is a mammal. Therefore, a whale is a vertebrate.", True, "vertebrate(X) :- mammal(X)."),
    ("If an animal is a reptile, it lays eggs. A turtle is a reptile. Therefore, a turtle lays eggs.", True, "lays_eggs(X) :- reptile(X)."),
    ("Every multiple of one hundred and thirty-one is odd. Two hundred and sixty-two is a multiple of one hundred and thirty-one. Therefore, two hundred and sixty-two is odd.", False, "odd(X) :- 0 is X mod 131, X \= 262."),
    ("If a shape is an icosikaitetragon, it has twenty-four sides. This shape has twenty-four sides. Therefore, this shape is an icosikaitetragon.", True, "icosikaitetragon(X) :- shape(X), has_twenty_four_sides(X)."),
    ("If a number is divisible by five hundred and eighty, it is even. One thousand one hundred and sixty is divisible by five hundred and eighty. Therefore, one thousand one hundred and sixty is even.", True, "even(X) :- 0 is X mod 580."),
    ("All birds have beaks. A sparrow is a bird. Therefore, a sparrow has a beak.", True, "has_beak(X) :- bird(X)."),
    ("If an animal is an amphibian, it has a three-chambered heart. A frog is an amphibian. Therefore, a frog has a three-chambered heart.", True, "has_three_chambered_heart(X) :- amphibian(X)."),
    ("Every multiple of one hundred and thirty-three is odd. Two hundred and sixty-six is a multiple of one hundred and thirty-three. Therefore, two hundred and sixty-six is odd.", False, "odd(X) :- 0 is X mod 133, X \= 266."),
    ("If a shape is an icosikai-pentagon, it has twenty-five sides. This shape has twenty-five sides. Therefore, this shape is an icosikai-pentagon.", True, "icosikai_pentagon(X) :- shape(X), has_twenty_five_sides(X)."),
    ("If a number is divisible by five hundred and ninety, it is even. One thousand one hundred and eighty is divisible by five hundred and ninety. Therefore, one thousand one hundred and eighty is even.", True, "even(X) :- 0 is X mod 590."),
    ("All cephalopods have a beak. An octopus is a cephalopod. Therefore, an octopus has a beak.", True, "has_beak(X) :- cephalopod(X)."),
    ("If an animal is a marsupial, it has a pouch. A koala is a marsupial. Therefore, a koala has a pouch.", True, "has_pouch(X) :- marsupial(X)."),
    ("Every multiple of one hundred and thirty-five is odd. Two hundred and seventy is a multiple of one hundred and thirty-five. Therefore, two hundred and seventy is odd.", False, "odd(X) :- 0 is X mod 135, X \= 270."),
    ("If a shape is an icosikaihexagon, it has twenty-six sides. This shape has twenty-six sides. Therefore, this shape is an icosikaihexagon.", True, "icosikaihexagon(X) :- shape(X), has_twenty_six_sides(X)."),
    ("If a number is divisible by six hundred, it is even. One thousand two hundred is divisible by six hundred. Therefore, one thousand two hundred is even.", True, "even(X) :- 0 is X mod 600."),
    ("All arachnids have eight legs. A spider is an arachnid. Therefore, a spider has eight legs.", True, "has_eight_legs(X) :- arachnid(X)."),
    ("If an animal is a bird, it can fly. An ostrich is a bird. Therefore, an ostrich can fly.", False, "can_fly(X) :- bird(X), not(ostrich(X))."),
    ("Every multiple of one hundred and thirty-seven is odd. Two hundred and seventy-four is a multiple of one hundred and thirty-seven. Therefore, two hundred and seventy-four is odd.", False, "odd(X) :- 0 is X mod 137, X \= 274."),
    ("If a shape is an icosikaiheptagon, it has twenty-seven sides. This shape has twenty-seven sides. Therefore, this shape is a icosikaiheptagon.", True, "icosikaiheptagon(X) :- shape(X), has_twenty_seven_sides(X)."),
    ("If a number is divisible by six hundred and ten, it is even. One thousand two hundred and twenty is divisible by six hundred and ten. Therefore, one thousand two hundred and twenty is even.", True, "even(X) :- 0 is X mod 610."),
    ("All dinosaurs are extinct. A tyrannosaurus is a dinosaur. Therefore, a tyrannosaurus is extinct.", True, "extinct(X) :- dinosaur(X)."),
    ("If an animal is a mammal, it is warm-blooded. A dolphin is a mammal. Therefore, a dolphin is warm-blooded.", True, "warm_blooded(X) :- mammal(X)."),
    ("Every multiple of one hundred and thirty-nine is odd. Two hundred and seventy-eight is a multiple of one hundred and thirty-nine. Therefore, two hundred and seventy-eight is odd.", False, "odd(X) :- 0 is X mod 139, X \= 278."),
    ("If a shape is an icosikaioctagon, it has twenty-eight sides. This shape has twenty-eight sides. Therefore, this shape is an icosikaioctagon.", True, "icosikaioctagon(X) :- shape(X), has_twenty_eight_sides(X)."),
    ("If a number is divisible by six hundred and twenty, it is even. One thousand two hundred and forty is divisible by six hundred and twenty. Therefore, one thousand two hundred and forty is even.", True, "even(X) :- 0 is X mod 620."),
    ("All primates have opposable thumbs. A chimpanzee is a primate. Therefore, a chimpanzee has opposable thumbs.", True, "has_opposable_thumbs(X) :- primate(X)."),
    ("If an animal is an insect, it has six legs. A bee is an insect. Therefore, a bee has six legs.", True, "has_six_legs(X) :- insect(X)."),
    ("Every multiple of one hundred and forty-one is odd. Two hundred and eighty-two is a multiple of one hundred and forty-one. Therefore, two hundred and eighty-two is odd.", False, "odd(X) :- 0 is X mod 141, X \= 282."),
    ("If a shape is an icosikainonagon, it has twenty-nine sides. This shape has twenty-nine sides. Therefore, this shape is an icosikainonagon.", True, "icosikainonagon(X) :- shape(X), has_twenty_nine_sides(X)."),
    ("If a number is divisible by six hundred and thirty, it is even. One thousand two hundred and sixty is divisible by six hundred and thirty. Therefore, one thousand two hundred and sixty is even.", True, "even(X) :- 0 is X mod 630."),
    ("All cetaceans are aquatic mammals. A blue whale is a cetacean. Therefore, a blue whale is an aquatic mammal.", True, "aquatic_mammal(X) :- cetacean(X)."),
    ("If an animal is a felid, it has retractable claws. A lion is a felid. Therefore, a lion has retractable claws.", True, "has_retractable_claws(X) :- felid(X)."),
    ("Every multiple of one hundred and forty-three is odd. Two hundred and eighty-six is a multiple of one hundred and forty-three. Therefore, two hundred and eighty-six is odd.", False, "odd(X) :- 0 is X mod 143, X \= 286."),
    ("If a shape is a triacontagon, it has thirty sides. This shape has thirty sides. Therefore, this shape is a triacontagon.", True, "triacontagon(X) :- shape(X), has_thirty_sides(X)."),
    ("If a number is divisible by six hundred and forty, it is even. One thousand two hundred and eighty is divisible by six hundred and forty. Therefore, one thousand two hundred and eighty is even.", True, "even(X) :- 0 is X mod 640."),
    ("All ungulates have hooves. A horse is an ungulate. Therefore, a horse has hooves.", True, "has_hooves(X) :- ungulate(X)."),
    ("If an animal is a canid, it has a tail. A fox is a canid. Therefore, a fox has a tail.", True, "has_tail(X) :- canid(X)."),
    ("Every multiple of one hundred and forty-five is odd. Two hundred and ninety is a multiple of one hundred and forty-five. Therefore, two hundred and ninety is odd.", False, "odd(X) :- 0 is X mod 145, X \= 290."),
    ("If a shape is a triacontakaidigon, it has thirty-one sides. This shape has thirty-one sides. Therefore, this shape is a triacontakaidigon.", True, "triacontakaidigon(X) :- shape(X), has_thirty_one_sides(X)."),
    ("If a number is divisible by six hundred and fifty, it is even. One thousand three hundred is divisible by six hundred and fifty. Therefore, one thousand three hundred is even.", True, "even(X) :- 0 is X mod 650."),
    ("All rodents have long incisors that continuously grow throughout their lives. A beaver is a rodent. Therefore, a beaver has long incisors that continuously grow.", True, "has_growing_incisors(X) :- rodent(X)."),
    ("If an animal is an avian, it has feathers. A penguin is an avian. Therefore, a penguin has feathers.", True, "has_feathers(X) :- avian(X)."),
    ("Every multiple of one hundred and forty-seven is odd. Two hundred and ninety-four is a multiple of one hundred and forty-seven. Therefore, two hundred and ninety-four is odd.", False, "odd(X) :- 0 is X mod 147, X \= 294."),
    ("If a shape is a triacontadigon, it has thirty-two sides. This shape has thirty-two sides. Therefore, this shape is a triacontadigon.", True, "triacontadigon(X) :- shape(X), has_thirty_two_sides(X)."),
    ("If a number is divisible by six hundred and sixty, it is even. One thousand three hundred and twenty is divisible by six hundred and sixty. Therefore, one thousand three hundred and twenty is even.", True, "even(X) :- 0 is X mod 660."),
    ("All marsupials have a pouch. A kangaroo is a marsupial. Therefore, a kangaroo has a pouch.", True, "has_pouch(X) :- marsupial(X)."),
    ("If an animal is a cetacean, it lives in water. A whale is a cetacean. Therefore, a whale lives in water.", True, "lives_in_water(X) :- cetacean(X)."),
    ("Every multiple of one hundred and forty-nine is odd. Two hundred and ninety-eight is a multiple of one hundred and forty-nine. Therefore, two hundred and ninety-eight is odd.", False, "odd(X) :- 0 is X mod 149, X \= 298."),
    ("If a shape is a triacontatrigon, it has thirty-three sides. This shape has thirty-three sides. Therefore, this shape is a triacontatrigon.", True, "triacontatrigon(X) :- shape(X), has_thirty_three_sides(X)."),
    ("If a number is divisible by six hundred and seventy, it is even. One thousand three hundred and forty is divisible by six hundred and seventy. Therefore, one thousand three hundred and forty is even.", True, "even(X) :- 0 is X mod 670."),
    ("All mammals are vertebrates. A whale is a mammal. Therefore, a whale is a vertebrate.", True, "vertebrate(X) :- mammal(X)."),
    ("If an animal is a reptile, it lays eggs. A turtle is a reptile. Therefore, a turtle lays eggs.", True, "lays_eggs(X) :- reptile(X)."),
    ("Every multiple of one hundred and fifty-one is odd. Three hundred and two is a multiple of one hundred and fifty-one. Therefore, three hundred and two is odd.", False, "odd(X) :- 0 is X mod 151, X \= 302."),
    ("If a shape is a triacontatetragon, it has thirty-four sides. This shape has thirty-four sides. Therefore, this shape is a triacontatetragon.", True, "triacontatetragon(X) :- shape(X), has_thirty_four_sides(X)."),
    ("If a number is divisible by six hundred and eighty, it is even. One thousand three hundred and sixty is divisible by six hundred and eighty. Therefore, one thousand three hundred and sixty is even.", True, "even(X) :- 0 is X mod 680."),
    ("All amphibians are vertebrates. A frog is an amphibian. Therefore, a frog is a vertebrate.", True, "vertebrate(X) :- amphibian(X)."),
    ("If an animal is a mammal, it has mammary glands. A cow is a mammal. Therefore, a cow has mammary glands.", True, "has_mammary_glands(X) :- mammal(X)."),
    ("Every multiple of one hundred and fifty-three is odd. Three hundred and six is a multiple of one hundred and fifty-three. Therefore, three hundred and six is odd.", False, "odd(X) :- 0 is X mod 153, X \= 306."),
    ("If a shape is a triacontapentagon, it has thirty-five sides. This shape has thirty-five sides. Therefore, this shape is a triacontapentagon.", True, "triacontapentagon(X) :- shape(X), has_thirty_five_sides(X)."),
    ("If a number is divisible by six hundred and ninety, it is even. One thousand three hundred and eighty is divisible by six hundred and ninety. Therefore, one thousand three hundred and eighty is even.", True, "even(X) :- 0 is X mod 690."),
    ("All insects have a segmented body. A grasshopper is an insect. Therefore, a grasshopper has a segmented body.", True, "has_segmented_body(X) :- insect(X)."),
    ("If an animal is a fish, it has gills. A salmon is a fish. Therefore, a salmon has gills.", True, "has_gills(X) :- fish(X)."),
    ("Every multiple of one hundred and fifty-five is odd. Three hundred and ten is a multiple of one hundred and fifty-five. Therefore, three hundred and ten is odd.", False, "odd(X) :- 0 is X mod 155, X \= 310."),
    ("If a shape is a triacontahexagon, it has thirty-six sides. This shape has thirty-six sides. Therefore, this shape is a triacontahexagon.", True, "triacontahexagon(X) :- shape(X), has_thirty_six_sides(X)."),
    ("If a number is divisible by eight hundred, it is even. One thousand six hundred is divisible by eight hundred. Therefore, one thousand six hundred is even.", True, "even(X) :- 0 is X mod 800."),
    ("All mammals have a backbone. A cat is a mammal. Therefore, a cat has a backbone.", True, "has_backbone(X) :- mammal(X)."),
    ("If an animal is a bird, it can fly. An ostrich is a bird. Therefore, an ostrich can fly.", False, "can_fly(X) :- bird(X), X \= ostrich."),
    ("Every prime number is odd. Two is a prime number. Therefore, two is odd.", False, "odd(X) :- prime(X), X \= 2."),
    ("If a shape is a square, it has four sides. This shape is a square. Therefore, this shape has four sides.", True, "has_four_sides(X) :- square(X)."),
    ("If a number is divisible by eight hundred and ten, it is even. One thousand six hundred and twenty is divisible by eight hundred and ten. Therefore, one thousand six hundred and twenty is even.", True, "even(X) :- 0 is X mod 810."),
    ("All primates have opposable thumbs. A chimpanzee is a primate. Therefore, a chimpanzee has opposable thumbs.", True, "has_opposable_thumbs(X) :- primate(X)."),
    ("If an animal is a mammal, it has mammary glands. A cow is a mammal. Therefore, a cow has mammary glands.", True, "has_mammary_glands(X) :- mammal(X)."),
    ("Every multiple of one hundred and eighty is even. Three hundred and sixty is a multiple of one hundred and eighty. Therefore, three hundred and sixty is even.", True, "even(X) :- 0 is X mod 180."),
    ("If a shape is a hexagon, it has six sides. This shape has six sides. Therefore, this shape is a hexagon.", True, "hexagon(X) :- shape(X), has_six_sides(X)."),
    ("If a number is divisible by nine hundred, it is even. One thousand eight hundred is divisible by nine hundred. Therefore, one thousand eight hundred is even.", True, "even(X) :- 0 is X mod 900."),
    ("All reptiles have scales. A snake is a reptile. Therefore, a snake has scales.", True, "has_scales(X) :- reptile(X)."),
    ("If an animal is a mammal, it has fur. A whale is a mammal. Therefore, a whale has fur.", False, "has_fur(X) :- mammal(X), X \= whale."),
    ("Every multiple of one hundred and ninety is even. Three hundred and eighty is a multiple of one hundred and ninety. Therefore, three hundred and eighty is even.", True, "even(X) :- 0 is X mod 190."),
    ("If a shape is an octagon, it has eight sides. This shape has eight sides. Therefore, this shape is an octagon.", True, "octagon(X) :- shape(X), has_eight_sides(X)."),
    ("If a number is divisible by nine hundred and twenty, it is even. One thousand eight hundred and forty is divisible by nine hundred and twenty. Therefore, one thousand eight hundred and forty is even.", True, "even(X) :- 0 is X mod 920."),
    ("All amphibians have gills at some stage in their life. A frog is an amphibian. Therefore, a frog has gills at some stage in its life.", True, "has_gills(X) :- amphibian(X), life_stage(X, gills)."),
    ("If an animal is a mammal, it is warm-blooded. A bat is a mammal. Therefore, a bat is warm-blooded.", True, "warm_blooded(X) :- mammal(X)."),
    ("Every multiple of two hundred is even. Four hundred is a multiple of two hundred. Therefore, four hundred is even.", True, "even(X) :- 0 is X mod 200."),
    ("If a shape is a decagon, it has ten sides. This shape has ten sides. Therefore, this shape is a decagon.", True, "decagon(X) :- shape(X), has_ten_sides(X)."),
    ("If a number is divisible by nine hundred and thirty, it is even. One thousand eight hundred and sixty is divisible by nine hundred and thirty. Therefore, one thousand eight hundred and sixty is even.", True, "even(X) :- 0 is X mod 930."),
    ("All birds have feathers. A sparrow is a bird. Therefore, a sparrow has feathers.", True, "has_feathers(X) :- bird(X)."),
    ("If an animal is a mammal, it has a vertebrate. A dolphin is a mammal. Therefore, a dolphin has a vertebrate.", True, "has_vertebrate(X) :- mammal(X)."),
    ("Every multiple of two hundred and ten is even. Four hundred and twenty is a multiple of two hundred and ten. Therefore, four hundred and twenty is even.", True, "even(X) :- 0 is X mod 210."),
    ("If a shape is a dodecagon, it has twelve sides. This shape has twelve sides. Therefore, this shape is a dodecagon.", True, "dodecagon(X) :- shape(X), has_twelve_sides(X)."),
    ("If a number is divisible by nine hundred and forty, it is even. One thousand eight hundred and eighty is divisible by nine hundred and forty. Therefore, one thousand eight hundred and eighty is even.", True, "even(X) :- 0 is X mod 940."),
    ("All cetaceans are mammals. A dolphin is a cetacean. Therefore, a dolphin is a mammal.", True, "mammal(X) :- cetacean(X)."),
    ("If an animal is a mammal, it has lungs. A whale is a mammal. Therefore, a whale has lungs.", True, "has_lungs(X) :- mammal(X)."),
    ("Every multiple of two hundred and twenty is even. Four hundred and forty is a multiple of two hundred and twenty. Therefore, four hundred and forty is even.", True, "even(X) :- 0 is X mod 220."),
    ("If a shape is a tetradecagon, it has fourteen sides. This shape has fourteen sides. Therefore, this shape is a tetradecagon.", True, "tetradecagon(X) :- shape(X), has_fourteen_sides(X)."),
    ("If a number is divisible by nine hundred and fifty, it is even. One thousand nine hundred is divisible by nine hundred and fifty. Therefore, one thousand nine hundred is even.", True, "even(X) :- 0 is X mod 950."),
    ("All insects have six legs. A bee is an insect. Therefore, a bee has six legs.", True, "has_six_legs(X) :- insect(X)."),
    ("If an animal is a mammal, it has teeth. A giraffe is a mammal. Therefore, a giraffe has teeth.", True, "has_teeth(X) :- mammal(X)."),
    ("Every multiple of two hundred and thirty is even. Four hundred and sixty is a multiple of two hundred and thirty. Therefore, four hundred and sixty is even.", True, "even(X) :- 0 is X mod 230."),
    ("If a shape is a hexadecagon, it has sixteen sides. This shape has sixteen sides. Therefore, this shape is a hexadecagon.", True, "hexadecagon(X) :- shape(X), has_sixteen_sides(X)."),
    ("If a number is divisible by nine hundred and sixty, it is even. One thousand nine hundred and twenty is divisible by nine hundred and sixty. Therefore, one thousand nine hundred and twenty is even.", True, "even(X) :- 0 is X mod 960."),
    ("All arachnids have eight legs. A spider is an arachnid. Therefore, a spider has eight legs.", True, "has_eight_legs(X) :- arachnid(X)."),
    ("If an animal is a mammal, it has mammary glands. A cow is a mammal. Therefore, a cow has mammary glands.", True, "has_mammary_glands(X) :- mammal(X)."),
    ("Every multiple of two hundred and forty is even. Four hundred and eighty is a multiple of two hundred and forty. Therefore, four hundred and eighty is even.", True, "even(X) :- 0 is X mod 240."),
    ("If a shape is an octadecagon, it has eighteen sides. This shape has eighteen sides. Therefore, this shape is an octadecagon.", True, "octadecagon(X) :- shape(X), has_eighteen_sides(X)."),
    ("If a number is divisible by nine hundred and seventy, it is even. One thousand nine hundred and forty is divisible by nine hundred and seventy. Therefore, one thousand nine hundred and forty is even.", True, "even(X) :- 0 is X mod 970."),
    ("All reptiles have scales. A snake is a reptile. Therefore, a snake has scales.", True, "has_scales(X) :- reptile(X)."),
    ("If an animal is a mammal, it is not cold-blooded. A cat is a mammal. Therefore, a cat is not cold-blooded.", True, "not_cold_blooded(X) :- mammal(X)."),
    ("Every multiple of two hundred and fifty is even. Five hundred is a multiple of two hundred and fifty. Therefore, five hundred is even.", True, "even(X) :- 0 is X mod 250."),
    ("If a shape is an icosagon, it has twenty sides. This shape has twenty sides. Therefore, this shape is an icosagon.", True, "icosagon(X) :- shape(X), has_twenty_sides(X)."),
    ("If a number is divisible by nine hundred and eighty, it is even. One thousand nine hundred and sixty is divisible by nine hundred and eighty. Therefore, one thousand nine hundred and sixty is even.", True, "even(X) :- 0 is X mod 980."),
    ("All amphibians are vertebrates. A frog is an amphibian. Therefore, a frog is a vertebrate.", True, "vertebrate(X) :- amphibian(X)."),
    ("If an animal is a mammal, it has a four-chambered heart. A human is a mammal. Therefore, a human has a four-chambered heart.", True, "has_four_chambered_heart(X) :- mammal(X)."),
    ("Every multiple of two hundred and sixty is even. Five hundred and twenty is a multiple of two hundred and sixty. Therefore, five hundred and twenty is even.", True, "even(X) :- 0 is X mod 260."),
    ("If a shape is a dodecahedron, it has twelve faces. This shape has twelve faces. Therefore, this shape is a dodecahedron.", True, "dodecahedron(X) :- shape(X), has_twelve_faces(X)."),
    ("If a number is divisible by nine hundred and ninety, it is even. One thousand nine hundred and eighty is divisible by nine hundred and ninety. Therefore, one thousand nine hundred and eighty is even.", True, "even(X) :- 0 is X mod 990."),
    ("All marsupials have pouches. A kangaroo is a marsupial. Therefore, a kangaroo has a pouch.", True, "has_pouch(X) :- marsupial(X)."),
    ("If an animal is a mammal, it has a spine. A monkey is a mammal. Therefore, a monkey has a spine.", True, "has_spine(X) :- mammal(X)."),
    ("Every multiple of two hundred and seventy is even. Five hundred and forty is a multiple of two hundred and seventy. Therefore, five hundred and forty is even.", True, "even(X) :- 0 is X mod 270."),
    ("If a shape is a tricosagon, it has twenty-three sides. This shape has twenty-three sides. Therefore, this shape is a tricosagon.", True, "tricosagon(X) :- shape(X), has_twenty_three_sides(X)."),
    ("If a number is divisible by one thousand, it is even. Two thousand is divisible by one thousand. Therefore, two thousand is even.", True, "even(X) :- 0 is X mod 1000."),
    ("All primates have opposable thumbs. A chimpanzee is a primate. Therefore, a chimpanzee has opposable thumbs.", True, "has_opposable_thumbs(X) :- primate(X)."),
    ("If an animal is a mammal, it has a neocortex. A dolphin is a mammal. Therefore, a dolphin has a neocortex.", True, "has_neocortex(X) :- mammal(X)."),
    ("Every multiple of two hundred and eighty is even. Five hundred and sixty is a multiple of two hundred and eighty. Therefore, five hundred and sixty is even.", True, "even(X) :- 0 is X mod 280."),
    ("If a shape is a tetracosagon, it has twenty-four sides. This shape has twenty-four sides. Therefore, this shape is a tetracosagon.", True, "tetracosagon(X) :- shape(X), has_twenty_four_sides(X)."),
    ("If a number is divisible by one thousand and ten, it is even. Two thousand and twenty is divisible by one thousand and ten. Therefore, two thousand and twenty is even.", True, "even(X) :- 0 is X mod 1010."),
    ("All cetaceans are aquatic mammals. A whale is a cetacean. Therefore, a whale is an aquatic mammal.", True, "aquatic_mammal(X) :- cetacean(X)."),
    ("If an animal is a reptile, it is cold-blooded. A lizard is a reptile. Therefore, a lizard is cold-blooded.", True, "cold_blooded(X) :- reptile(X)."),
    ("Every multiple of two hundred and ninety is even. Five hundred and eighty is a multiple of two hundred and ninety. Therefore, five hundred and eighty is even.", True, "even(X) :- 0 is X mod 290."),
    ("If a shape is a pentadecagon, it has fifteen sides. This shape has fifteen sides. Therefore, this shape is a pentadecagon.", True, "pentadecagon(X) :- shape(X), has_fifteen_sides(X)."),
    ("If a number is divisible by one thousand and one hundred, it is even. Two thousand and two hundred is divisible by one thousand and one hundred. Therefore, two thousand and two hundred is even.", True, "even(X) :- 0 is X mod 1100."),
    ("If a number is divisible by one thousand and three hundred and fifty, it is even. Two thousand seven hundred is divisible by one thousand and three hundred and fifty. Therefore, two thousand seven hundred is even.", True, "even(X) :- 0 is X mod 1350."),
    ("All primates have opposable thumbs. A chimpanzee is a primate. Therefore, a chimpanzee has opposable thumbs.", True, "has_opposable_thumbs(X) :- primate(X)."),
    ("If a number is divisible by one thousand and five hundred and thirty, it is even. Three thousand and sixty is divisible by one thousand and five hundred and thirty. Therefore, three thousand and sixty is even.", True, "even(X) :- 0 is X mod 1530."),
    ("All cetaceans are aquatic mammals. A dolphin is a cetacean. Therefore, a dolphin is an aquatic mammal.", True, "aquatic_mammal(X) :- cetacean(X)."),
    ("If an animal is a reptile, it lays eggs. A turtle is a reptile. Therefore, a turtle lays eggs.", True, "lays_eggs(X) :- reptile(X)."),
    ("Every multiple of eight hundred is even. One thousand six hundred is a multiple of eight hundred. Therefore, one thousand six hundred is even.", True, "even(X) :- 0 is X mod 800."),
    ("If a shape is a icosikaioktogon, it has eighty-eight sides. This shape has eighty-eight sides. Therefore, this shape is a icosikaioktogon.", True, "icosikaioktogon(X) :- shape(X), has_eighty_eight_sides(X)."),
    ("If an animal is a mammal, it has mammary glands. A cow is a mammal. Therefore, a cow has mammary glands.", True, "has_mammary_glands(X) :- mammal(X)."),
    ("Every multiple of six hundred and thirty is even. One thousand two hundred and sixty is a multiple of six hundred and thirty. Therefore, one thousand two hundred and sixty is even.", True, "even(X) :- 0 is X mod 630."),
    ("If a shape is a icosikaieinonadecagon, it has forty-nine sides. This shape has forty-nine sides. Therefore, this shape is a icosikaieinonadecagon.", True, "icosikaieinonadecagon(X) :- shape(X), has_forty_nine_sides(X)."),
    ("All arachnids have eight legs. A spider is an arachnid. Therefore, a spider has eight legs.", True, "has_eight_legs(X) :- arachnid(X)."),
    ("If an animal is an insect, it has three body parts. A bee is an insect. Therefore, a bee has three body parts.", True, "has_three_body_parts(X) :- insect(X)."),
    ("Every multiple of three hundred is even. Six hundred is a multiple of three hundred. Therefore, six hundred is even.", True, "even(X) :- 0 is X mod 300."),
    ("If a shape is a hexadecagon, it has sixteen sides. This shape has sixteen sides. Therefore, this shape is a hexadecagon.", True, "hexadecagon(X) :- shape(X), has_sixteen_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and ten, it is even. Two thousand and two hundred and twenty is divisible by one thousand and one hundred and ten. Therefore, two thousand and two hundred and twenty is even.", True, "even(X) :- 0 is X mod 1110."),
    ("All insects have antennae. A butterfly is an insect. Therefore, a butterfly has antennae.", True, "has_antennae(X) :- insect(X)."),
    ("If an animal is a bird, it can fly. An ostrich is a bird. Therefore, an ostrich can fly.", False, "can_fly(X) :- bird(X), not(ostrich(X))."),
    ("Every multiple of three hundred and ninety is even. Seven hundred and eighty is a multiple of three hundred and ninety. Therefore, seven hundred and eighty is even.", True, "even(X) :- 0 is X mod 390."),
    ("If a shape is a icosikaipentagon, it has twenty-five sides. This shape has twenty-five sides. Therefore, this shape is a icosikaipentagon.", True, "icosikaipentagon(X) :- shape(X), has_twenty_five_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and twenty, it is even. Two thousand and two hundred and forty is divisible by one thousand and one hundred and twenty. Therefore, two thousand and two hundred and forty is even.", True, "even(X) :- 0 is X mod 1120."),
    ("All amphibians are vertebrates. A salamander is an amphibian. Therefore, a salamander is a vertebrate.", True, "vertebrate(X) :- amphibian(X)."),
    ("If an animal is a fish, it can swim. A shark is a fish. Therefore, a shark can swim.", True, "can_swim(X) :- fish(X)."),
    ("Every multiple of four hundred is even. Eight hundred is a multiple of four hundred. Therefore, eight hundred is even.", True, "even(X) :- 0 is X mod 400."),
    ("If a shape is a icosikaihexagon, it has twenty-six sides. This shape has twenty-six sides. Therefore, this shape is a icosikaihexagon.", True, "icosikaihexagon(X) :- shape(X), has_twenty_six_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and thirty, it is even. Two thousand and two hundred and sixty is divisible by one thousand and one hundred and thirty. Therefore, two thousand and two hundred and sixty is even.", True, "even(X) :- 0 is X mod 1130."),
    ("All mammals have a vertebral column. A cat is a mammal. Therefore, a cat has a vertebral column.", True, "vertebral_column(X) :- mammal(X)."),
    ("If an animal is an amphibian, it can live both on land and in water. A frog is an amphibian. Therefore, a frog can live both on land and in water.", True, "live_land_water(X) :- amphibian(X)."),
    ("Every multiple of four hundred and ten is even. Eight hundred and twenty is a multiple of four hundred and ten. Therefore, eight hundred and twenty is even.", True, "even(X) :- 0 is X mod 410."),
    ("If a shape is a icosikaiheptagon, it has twenty-seven sides. This shape has twenty-seven sides. Therefore, this shape is a icosikaiheptagon.", True, "icosikaiheptagon(X) :- shape(X), has_twenty_seven_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and forty, it is even. Two thousand and two hundred and eighty is divisible by one thousand and one hundred and forty. Therefore, two thousand and two hundred and eighty is even.", True, "even(X) :- 0 is X mod 1140."),
    ("All reptiles have scales. A snake is a reptile. Therefore, a snake has scales.", True, "has_scales(X) :- reptile(X)."),
    ("If an animal is a mammal, it has a neocortex. A dolphin is a mammal. Therefore, a dolphin has a neocortex.", True, "has_neocortex(X) :- mammal(X)."),
    ("Every multiple of four hundred and twenty is even. Eight hundred and forty is a multiple of four hundred and twenty. Therefore, eight hundred and forty is even.", True, "even(X) :- 0 is X mod 420."),
    ("If a shape is a icosikaioctagon, it has twenty-eight sides. This shape has twenty-eight sides. Therefore, this shape is a icosikaioctagon.", True, "icosikaioctagon(X) :- shape(X), has_twenty_eight_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and fifty, it is even. Two thousand and three hundred is divisible by one thousand and one hundred and fifty. Therefore, two thousand and three hundred is even.", True, "even(X) :- 0 is X mod 1150."),
    ("All birds have feathers. A penguin is a bird. Therefore, a penguin has feathers.", True, "has_feathers(X) :- bird(X)."),
    ("If an animal is a reptile, it is cold-blooded. A lizard is a reptile. Therefore, a lizard is cold-blooded.", True, "cold_blooded(X) :- reptile(X)."),
    ("Every multiple of four hundred and thirty is even. Eight hundred and sixty is a multiple of four hundred and thirty. Therefore, eight hundred and sixty is even.", True, "even(X) :- 0 is X mod 430."),
    ("If a shape is a icosikainonagon, it has twenty-nine sides. This shape has twenty-nine sides. Therefore, this shape is a icosikainonagon.", True, "icosikainonagon(X) :- shape(X), has_twenty_nine_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and sixty, it is even. Two thousand and three hundred and twenty is divisible by one thousand and one hundred and sixty. Therefore, two thousand and three hundred and twenty is even.", True, "even(X) :- 0 is X mod 1160."),
    ("All cetaceans are mammals. A whale is a cetacean. Therefore, a whale is a mammal.", True, "mammal(X) :- cetacean(X)."),
    ("If an animal is an insect, it has six legs. A bee is an insect. Therefore, a bee has six legs.", True, "has_six_legs(X) :- insect(X)."),
    ("Every multiple of four hundred and forty is even. Eight hundred and eighty is a multiple of four hundred and forty. Therefore, eight hundred and eighty is even.", True, "even(X) :- 0 is X mod 440."),
    ("If a shape is a icosikaidecagon, it has thirty sides. This shape has thirty sides. Therefore, this shape is a icosikaidecagon.", True, "icosikaidecagon(X) :- shape(X), has_thirty_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and seventy, it is even. Two thousand and three hundred and forty is divisible by one thousand and one hundred and seventy. Therefore, two thousand and three hundred and forty is even.", True, "even(X) :- 0 is X mod 1170."),
    ("All insects have antennae. A butterfly is an insect. Therefore, a butterfly has antennae.", True, "has_antennae(X) :- insect(X)."),
    ("If an animal is a mammal, it has teeth. A giraffe is a mammal. Therefore, a giraffe has teeth.", True, "has_teeth(X) :- mammal(X)."),
    ("Every multiple of two hundred and thirty is even. Four hundred and sixty is a multiple of two hundred and thirty. Therefore, four hundred and sixty is even.", True, "even(X) :- 0 is X mod 230."),
    ("If a shape is a hexadecagon, it has sixteen sides. This shape has sixteen sides. Therefore, this shape is a hexadecagon.", True, "hexadecagon(X) :- shape(X), has_sixteen_sides(X)."),
    ("If a number is divisible by nine hundred and sixty, it is even. One thousand nine hundred and twenty is divisible by nine hundred and sixty. Therefore, one thousand nine hundred and twenty is even.", True, "even(X) :- 0 is X mod 960."),
    ("All arachnids have eight legs. A spider is an arachnid. Therefore, a spider has eight legs.", True, "has_eight_legs(X) :- arachnid(X)."),
    ("If an animal is a mammal, it has mammary glands. A cow is a mammal. Therefore, a cow has mammary glands.", True, "has_mammary_glands(X) :- mammal(X)."),
    ("Every multiple of two hundred and forty is even. Four hundred and eighty is a multiple of two hundred and forty. Therefore, four hundred and eighty is even.", True, "even(X) :- 0 is X mod 240."),
    ("If a shape is an octadecagon, it has eighteen sides. This shape has eighteen sides. Therefore, this shape is an octadecagon.", True, "octadecagon(X) :- shape(X), has_eighteen_sides(X)."),
    ("If a number is divisible by nine hundred and seventy, it is even. One thousand nine hundred and forty is divisible by nine hundred and seventy. Therefore, one thousand nine hundred and forty is even.", True, "even(X) :- 0 is X mod 970."),
    ("All reptiles have scales. A snake is a reptile. Therefore, a snake has scales.", True, "has_scales(X) :- reptile(X)."),
    ("If an animal is a mammal, it is not cold-blooded. A cat is a mammal. Therefore, a cat is not cold-blooded.", True, "not_cold_blooded(X) :- mammal(X)."),
    ("Every multiple of two hundred and fifty is even. Five hundred is a multiple of two hundred and fifty. Therefore, five hundred is even.", True, "even(X) :- 0 is X mod 250."),
    ("If a shape is an icosagon, it has twenty sides. This shape has twenty sides. Therefore, this shape is an icosagon.", True, "icosagon(X) :- shape(X), has_twenty_sides(X)."),
    ("If a number is divisible by nine hundred and eighty, it is even. One thousand nine hundred and sixty is divisible by nine hundred and eighty. Therefore, one thousand nine hundred and sixty is even.", True, "even(X) :- 0 is X mod 980."),
    ("All amphibians are vertebrates. A frog is an amphibian. Therefore, a frog is a vertebrate.", True, "vertebrate(X) :- amphibian(X)."),
    ("If an animal is a mammal, it has a four-chambered heart. A human is a mammal. Therefore, a human has a four-chambered heart.", True, "has_four_chambered_heart(X) :- mammal(X)."),
    ("Every multiple of two hundred and sixty is even. Five hundred and twenty is a multiple of two hundred and sixty. Therefore, five hundred and twenty is even.", True, "even(X) :- 0 is X mod 260."),
    ("If a shape is a dodecahedron, it has twelve faces. This shape has twelve faces. Therefore, this shape is a dodecahedron.", True, "dodecahedron(X) :- shape(X), has_twelve_faces(X)."),
    ("If a number is divisible by nine hundred and ninety, it is even. One thousand nine hundred and eighty is divisible by nine hundred and ninety. Therefore, one thousand nine hundred and eighty is even.", True, "even(X) :- 0 is X mod 990."),
    ("All marsupials have pouches. A kangaroo is a marsupial. Therefore, a kangaroo has a pouch.", True, "has_pouch(X) :- marsupial(X)."),
    ("If an animal is a mammal, it has a spine. A monkey is a mammal. Therefore, a monkey has a spine.", True, "has_spine(X) :- mammal(X)."),
    ("Every multiple of two hundred and seventy is even. Five hundred and forty is a multiple of two hundred and seventy. Therefore, five hundred and forty is even.", True, "even(X) :- 0 is X mod 270."),
    ("If a shape is a tricosagon, it has twenty-three sides. This shape has twenty-three sides. Therefore, this shape is a tricosagon.", True, "tricosagon(X) :- shape(X), has_twenty_three_sides(X)."),
    ("If a number is divisible by one thousand, it is even. Two thousand is divisible by one thousand. Therefore, two thousand is even.", True, "even(X) :- 0 is X mod 1000."),
    ("All primates have opposable thumbs. A chimpanzee is a primate. Therefore, a chimpanzee has opposable thumbs.", True, "has_opposable_thumbs(X) :- primate(X)."),
    ("If an animal is a mammal, it has a neocortex. A dolphin is a mammal. Therefore, a dolphin has a neocortex.", True, "has_neocortex(X) :- mammal(X)."),
    ("Every multiple of two hundred and eighty is even. Five hundred and sixty is a multiple of two hundred and eighty. Therefore, five hundred and sixty is even.", True, "even(X) :- 0 is X mod 280."),
    ("If a shape is a tetracosagon, it has twenty-four sides. This shape has twenty-four sides. Therefore, this shape is a tetracosagon.", True, "tetracosagon(X) :- shape(X), has_twenty_four_sides(X)."),
    ("If a number is divisible by one thousand and ten, it is even. Two thousand and twenty is divisible by one thousand and ten. Therefore, two thousand and twenty is even.", True, "even(X) :- 0 is X mod 1010."),
    ("All cetaceans are aquatic mammals. A whale is a cetacean. Therefore, a whale is an aquatic mammal.", True, "aquatic_mammal(X) :- cetacean(X)."),
    ("If an animal is a reptile, it is cold-blooded. A lizard is a reptile. Therefore, a lizard is cold-blooded.", True, "cold_blooded(X) :- reptile(X)."),
    ("Every multiple of two hundred and ninety is even. Five hundred and eighty is a multiple of two hundred and ninety. Therefore, five hundred and eighty is even.", True, "even(X) :- 0 is X mod 290."),
    ("If a shape is a pentadecagon, it has fifteen sides. This shape has fifteen sides. Therefore, this shape is a pentadecagon.", True, "pentadecagon(X) :- shape(X), has_fifteen_sides(X)."),
    ("If a number is divisible by one thousand and one hundred, it is even. Two thousand and two hundred is divisible by one thousand and one hundred. Therefore, two thousand and two hundred is even.", True, "even(X) :- 0 is X mod 1100."),
    ("If a number is divisible by one thousand and three hundred and fifty, it is even. Two thousand seven hundred is divisible by one thousand and three hundred and fifty. Therefore, two thousand seven hundred is even.", True, "even(X) :- 0 is X mod 1350."),
    ("All primates have opposable thumbs. A chimpanzee is a primate. Therefore, a chimpanzee has opposable thumbs.", True, "has_opposable_thumbs(X) :- primate(X)."),
    ("If a number is divisible by one thousand and five hundred and thirty, it is even. Three thousand and sixty is divisible by one thousand and five hundred and thirty. Therefore, three thousand and sixty is even.", True, "even(X) :- 0 is X mod 1530."),
    ("All cetaceans are aquatic mammals. A dolphin is a cetacean. Therefore, a dolphin is an aquatic mammal.", True, "aquatic_mammal(X) :- cetacean(X)."),
    ("If an animal is a reptile, it lays eggs. A turtle is a reptile. Therefore, a turtle lays eggs.", True, "lays_eggs(X) :- reptile(X)."),
    ("Every multiple of eight hundred is even. One thousand six hundred is a multiple of eight hundred. Therefore, one thousand six hundred is even.", True, "even(X) :- 0 is X mod 800."),
    ("If a shape is a icosikaioktogon, it has eighty-eight sides. This shape has eighty-eight sides. Therefore, this shape is a icosikaioktogon.", True, "icosikaioktogon(X) :- shape(X), has_eighty_eight_sides(X)."),
    ("If an animal is a mammal, it has mammary glands. A cow is a mammal. Therefore, a cow has mammary glands.", True, "has_mammary_glands(X) :- mammal(X)."),
    ("Every multiple of six hundred and thirty is even. One thousand two hundred and sixty is a multiple of six hundred and thirty. Therefore, one thousand two hundred and sixty is even.", True, "even(X) :- 0 is X mod 630."),
    ("If a shape is a icosikaieinonadecagon, it has forty-nine sides. This shape has forty-nine sides. Therefore, this shape is a icosikaieinonadecagon.", True, "icosikaieinonadecagon(X) :- shape(X), has_forty_nine_sides(X)."),
    ("All arachnids have eight legs. A spider is an arachnid. Therefore, a spider has eight legs.", True, "has_eight_legs(X) :- arachnid(X)."),
    ("If an animal is an insect, it has three body parts. A bee is an insect. Therefore, a bee has three body parts.", True, "has_three_body_parts(X) :- insect(X)."),
    ("Every multiple of three hundred is even. Six hundred is a multiple of three hundred. Therefore, six hundred is even.", True, "even(X) :- 0 is X mod 300."),
    ("If a shape is a hexadecagon, it has sixteen sides. This shape has sixteen sides. Therefore, this shape is a hexadecagon.", True, "hexadecagon(X) :- shape(X), has_sixteen_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and ten, it is even. Two thousand and two hundred and twenty is divisible by one thousand and one hundred and ten. Therefore, two thousand and two hundred and twenty is even.", True, "even(X) :- 0 is X mod 1110."),
    ("All insects have antennae. A butterfly is an insect. Therefore, a butterfly has antennae.", True, "has_antennae(X) :- insect(X)."),
    ("If an animal is a bird, it can fly. An ostrich is a bird. Therefore, an ostrich can fly.", False, "can_fly(X) :- bird(X), not(ostrich(X))."),
    ("Every multiple of three hundred and ninety is even. Seven hundred and eighty is a multiple of three hundred and ninety. Therefore, seven hundred and eighty is even.", True, "even(X) :- 0 is X mod 390."),
    ("If a shape is a icosikaipentagon, it has twenty-five sides. This shape has twenty-five sides. Therefore, this shape is a icosikaipentagon.", True, "icosikaipentagon(X) :- shape(X), has_twenty_five_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and twenty, it is even. Two thousand and two hundred and forty is divisible by one thousand and one hundred and twenty. Therefore, two thousand and two hundred and forty is even.", True, "even(X) :- 0 is X mod 1120."),
    ("All amphibians are vertebrates. A salamander is an amphibian. Therefore, a salamander is a vertebrate.", True, "vertebrate(X) :- amphibian(X)."),
    ("If an animal is a fish, it can swim. A shark is a fish. Therefore, a shark can swim.", True, "can_swim(X) :- fish(X)."),
    ("Every multiple of four hundred is even. Eight hundred is a multiple of four hundred. Therefore, eight hundred is even.", True, "even(X) :- 0 is X mod 400."),
    ("If a shape is a icosikaihexagon, it has twenty-six sides. This shape has twenty-six sides. Therefore, this shape is a icosikaihexagon.", True, "icosikaihexagon(X) :- shape(X), has_twenty_six_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and thirty, it is even. Two thousand and two hundred and sixty is divisible by one thousand and one hundred and thirty. Therefore, two thousand and two hundred and sixty is even.", True, "even(X) :- 0 is X mod 1130."),
    ("All mammals have a vertebral column. A cat is a mammal. Therefore, a cat has a vertebral column.", True, "vertebral_column(X) :- mammal(X)."),
    ("If an animal is an amphibian, it can live both on land and in water. A frog is an amphibian. Therefore, a frog can live both on land and in water.", True, "live_land_water(X) :- amphibian(X)."),
    ("Every multiple of four hundred and ten is even. Eight hundred and twenty is a multiple of four hundred and ten. Therefore, eight hundred and twenty is even.", True, "even(X) :- 0 is X mod 410."),
    ("If a shape is a icosikaiheptagon, it has twenty-seven sides. This shape has twenty-seven sides. Therefore, this shape is a icosikaiheptagon.", True, "icosikaiheptagon(X) :- shape(X), has_twenty_seven_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and forty, it is even. Two thousand and two hundred and eighty is divisible by one thousand and one hundred and forty. Therefore, two thousand and two hundred and eighty is even.", True, "even(X) :- 0 is X mod 1140."),
    ("All reptiles have scales. A snake is a reptile. Therefore, a snake has scales.", True, "has_scales(X) :- reptile(X)."),
    ("If an animal is a mammal, it has a neocortex. A dolphin is a mammal. Therefore, a dolphin has a neocortex.", True, "has_neocortex(X) :- mammal(X)."),
    ("Every multiple of four hundred and twenty is even. Eight hundred and forty is a multiple of four hundred and twenty. Therefore, eight hundred and forty is even.", True, "even(X) :- 0 is X mod 420."),
    ("If a shape is a icosikaioctagon, it has twenty-eight sides. This shape has twenty-eight sides. Therefore, this shape is a icosikaioctagon.", True, "icosikaioctagon(X) :- shape(X), has_twenty_eight_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and fifty, it is even. Two thousand and three hundred is divisible by one thousand and one hundred and fifty. Therefore, two thousand and three hundred is even.", True, "even(X) :- 0 is X mod 1150."),
    ("All birds have feathers. A penguin is a bird. Therefore, a penguin has feathers.", True, "has_feathers(X) :- bird(X)."),
    ("If an animal is a reptile, it is cold-blooded. A lizard is a reptile. Therefore, a lizard is cold-blooded.", True, "cold_blooded(X) :- reptile(X)."),
    ("Every multiple of four hundred and thirty is even. Eight hundred and sixty is a multiple of four hundred and thirty. Therefore, eight hundred and sixty is even.", True, "even(X) :- 0 is X mod 430."),
    ("If a shape is a icosikainonagon, it has twenty-nine sides. This shape has twenty-nine sides. Therefore, this shape is a icosikainonagon.", True, "icosikainonagon(X) :- shape(X), has_twenty_nine_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and sixty, it is even. Two thousand and three hundred and twenty is divisible by one thousand and one hundred and sixty. Therefore, two thousand and three hundred and twenty is even.", True, "even(X) :- 0 is X mod 1160."),
    ("All cetaceans are mammals. A whale is a cetacean. Therefore, a whale is a mammal.", True, "mammal(X) :- cetacean(X)."),
    ("If an animal is an insect, it has six legs. A bee is an insect. Therefore, a bee has six legs.", True, "has_six_legs(X) :- insect(X)."),
    ("Every multiple of four hundred and forty is even. Eight hundred and eighty is a multiple of four hundred and forty. Therefore, eight hundred and eighty is even.", True, "even(X) :- 0 is X mod 440."),
    ("If a shape is a icosikaidecagon, it has thirty sides. This shape has thirty sides. Therefore, this shape is a icosikaidecagon.", True, "icosikaidecagon(X) :- shape(X), has_thirty_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and seventy, it is even. Two thousand and three hundred and forty is divisible by one thousand and one hundred and seventy. Therefore, two thousand and three hundred and forty is even.", True, "even(X) :- 0 is X mod 1170."),
    ("All insects have antennae. A butterfly is an insect. Therefore, a butterfly has antennae.", True, "has_antennae(X) :- insect(X)."),
    ("If an animal is a mammal, it has teeth. A giraffe is a mammal. Therefore, a giraffe has teeth.", True, "has_teeth(X) :- mammal(X)."),
    ("Every multiple of two hundred and thirty is even. Four hundred and sixty is a multiple of two hundred and thirty. Therefore, four hundred and sixty is even.", True, "even(X) :- 0 is X mod 230."),
    ("If a shape is a hexadecagon, it has sixteen sides. This shape has sixteen sides. Therefore, this shape is a hexadecagon.", True, "hexadecagon(X) :- shape(X), has_sixteen_sides(X)."),
    ("If a number is divisible by nine hundred and sixty, it is even. One thousand nine hundred and twenty is divisible by nine hundred and sixty. Therefore, one thousand nine hundred and twenty is even.", True, "even(X) :- 0 is X mod 960."),
    ("All arachnids have eight legs. A spider is an arachnid. Therefore, a spider has eight legs.", True, "has_eight_legs(X) :- arachnid(X)."),
    ("If an animal is a mammal, it has mammary glands. A cow is a mammal. Therefore, a cow has mammary glands.", True, "has_mammary_glands(X) :- mammal(X)."),
    ("Every multiple of two hundred and forty is even. Four hundred and eighty is a multiple of two hundred and forty. Therefore, four hundred and eighty is even.", True, "even(X) :- 0 is X mod 240."),
    ("If a shape is an octadecagon, it has eighteen sides. This shape has eighteen sides. Therefore, this shape is an octadecagon.", True, "octadecagon(X) :- shape(X), has_eighteen_sides(X)."),
    ("If a number is divisible by nine hundred and seventy, it is even. One thousand nine hundred and forty is divisible by nine hundred and seventy. Therefore, one thousand nine hundred and forty is even.", True, "even(X) :- 0 is X mod 970."),
    ("All reptiles have scales. A snake is a reptile. Therefore, a snake has scales.", True, "has_scales(X) :- reptile(X)."),
    ("If an animal is a mammal, it is not cold-blooded. A cat is a mammal. Therefore, a cat is not cold-blooded.", True, "not_cold_blooded(X) :- mammal(X)."),
    ("Every multiple of two hundred and fifty is even. Five hundred is a multiple of two hundred and fifty. Therefore, five hundred is even.", True, "even(X) :- 0 is X mod 250."),
    ("If a shape is an icosagon, it has twenty sides. This shape has twenty sides. Therefore, this shape is an icosagon.", True, "icosagon(X) :- shape(X), has_twenty_sides(X)."),
    ("If a number is divisible by nine hundred and eighty, it is even. One thousand nine hundred and sixty is divisible by nine hundred and eighty. Therefore, one thousand nine hundred and sixty is even.", True, "even(X) :- 0 is X mod 980."),
    ("All amphibians are vertebrates. A frog is an amphibian. Therefore, a frog is a vertebrate.", True, "vertebrate(X) :- amphibian(X)."),
    ("If an animal is a mammal, it has a four-chambered heart. A human is a mammal. Therefore, a human has a four-chambered heart.", True, "has_four_chambered_heart(X) :- mammal(X)."),
    ("Every multiple of two hundred and sixty is even. Five hundred and twenty is a multiple of two hundred and sixty. Therefore, five hundred and twenty is even.", True, "even(X) :- 0 is X mod 260."),
    ("If a shape is a dodecahedron, it has twelve faces. This shape has twelve faces. Therefore, this shape is a dodecahedron.", True, "dodecahedron(X) :- shape(X), has_twelve_faces(X)."),
    ("If a number is divisible by nine hundred and ninety, it is even. One thousand nine hundred and eighty is divisible by nine hundred and ninety. Therefore, one thousand nine hundred and eighty is even.", True, "even(X) :- 0 is X mod 990."),
    ("All marsupials have pouches. A kangaroo is a marsupial. Therefore, a kangaroo has a pouch.", True, "has_pouch(X) :- marsupial(X)."),
    ("If an animal is a mammal, it has a spine. A monkey is a mammal. Therefore, a monkey has a spine.", True, "has_spine(X) :- mammal(X)."),
    ("Every multiple of two hundred and seventy is even. Five hundred and forty is a multiple of two hundred and seventy. Therefore, five hundred and forty is even.", True, "even(X) :- 0 is X mod 270."),
    ("If a shape is a tricosagon, it has twenty-three sides. This shape has twenty-three sides. Therefore, this shape is a tricosagon.", True, "tricosagon(X) :- shape(X), has_twenty_three_sides(X)."),
    ("If a number is divisible by one thousand, it is even. Two thousand is divisible by one thousand. Therefore, two thousand is even.", True, "even(X) :- 0 is X mod 1000."),
    ("All primates have opposable thumbs. A chimpanzee is a primate. Therefore, a chimpanzee has opposable thumbs.", True, "has_opposable_thumbs(X) :- primate(X)."),
    ("If an animal is a mammal, it has a neocortex. A dolphin is a mammal. Therefore, a dolphin has a neocortex.", True, "has_neocortex(X) :- mammal(X)."),
    ("Every multiple of two hundred and eighty is even. Five hundred and sixty is a multiple of two hundred and eighty. Therefore, five hundred and sixty is even.", True, "even(X) :- 0 is X mod 280."),
    ("If a shape is a tetracosagon, it has twenty-four sides. This shape has twenty-four sides. Therefore, this shape is a tetracosagon.", True, "tetracosagon(X) :- shape(X), has_twenty_four_sides(X)."),
    ("If a number is divisible by one thousand and ten, it is even. Two thousand and twenty is divisible by one thousand and ten. Therefore, two thousand and twenty is even.", True, "even(X) :- 0 is X mod 1010."),
    ("All cetaceans are aquatic mammals. A whale is a cetacean. Therefore, a whale is an aquatic mammal.", True, "aquatic_mammal(X) :- cetacean(X)."),
    ("If an animal is a reptile, it is cold-blooded. A lizard is a reptile. Therefore, a lizard is cold-blooded.", True, "cold_blooded(X) :- reptile(X)."),
    ("Every multiple of two hundred and ninety is even. Five hundred and eighty is a multiple of two hundred and ninety. Therefore, five hundred and eighty is even.", True, "even(X) :- 0 is X mod 290."),
    ("If a shape is a pentadecagon, it has fifteen sides. This shape has fifteen sides. Therefore, this shape is a pentadecagon.", True, "pentadecagon(X) :- shape(X), has_fifteen_sides(X)."),
    ("If a number is divisible by one thousand and one hundred, it is even. Two thousand and two hundred is divisible by one thousand and one hundred. Therefore, two thousand and two hundred is even.", True, "even(X) :- 0 is X mod 1100."),
    ("If a number is divisible by one thousand and three hundred and fifty, it is even. Two thousand seven hundred is divisible by one thousand and three hundred and fifty. Therefore, two thousand seven hundred is even.", True, "even(X) :- 0 is X mod 1350."),
    ("All primates have opposable thumbs. A chimpanzee is a primate. Therefore, a chimpanzee has opposable thumbs.", True, "has_opposable_thumbs(X) :- primate(X)."),
    ("If a number is divisible by one thousand and five hundred and thirty, it is even. Three thousand and sixty is divisible by one thousand and five hundred and thirty. Therefore, three thousand and sixty is even.", True, "even(X) :- 0 is X mod 1530."),
    ("All cetaceans are aquatic mammals. A dolphin is a cetacean. Therefore, a dolphin is an aquatic mammal.", True, "aquatic_mammal(X) :- cetacean(X)."),
    ("If an animal is a reptile, it lays eggs. A turtle is a reptile. Therefore, a turtle lays eggs.", True, "lays_eggs(X) :- reptile(X)."),
    ("Every multiple of eight hundred is even. One thousand six hundred is a multiple of eight hundred. Therefore, one thousand six hundred is even.", True, "even(X) :- 0 is X mod 800."),
    ("If a shape is a icosikaioktogon, it has eighty-eight sides. This shape has eighty-eight sides. Therefore, this shape is a icosikaioktogon.", True, "icosikaioktogon(X) :- shape(X), has_eighty_eight_sides(X)."),
    ("If an animal is a mammal, it has mammary glands. A cow is a mammal. Therefore, a cow has mammary glands.", True, "has_mammary_glands(X) :- mammal(X)."),
    ("Every multiple of six hundred and thirty is even. One thousand two hundred and sixty is a multiple of six hundred and thirty. Therefore, one thousand two hundred and sixty is even.", True, "even(X) :- 0 is X mod 630."),
    ("If a shape is a icosikaieinonadecagon, it has forty-nine sides. This shape has forty-nine sides. Therefore, this shape is a icosikaieinonadecagon.", True, "icosikaieinonadecagon(X) :- shape(X), has_forty_nine_sides(X)."),
    ("All arachnids have eight legs. A spider is an arachnid. Therefore, a spider has eight legs.", True, "has_eight_legs(X) :- arachnid(X)."),
    ("If an animal is an insect, it has three body parts. A bee is an insect. Therefore, a bee has three body parts.", True, "has_three_body_parts(X) :- insect(X)."),
    ("Every multiple of three hundred is even. Six hundred is a multiple of three hundred. Therefore, six hundred is even.", True, "even(X) :- 0 is X mod 300."),
    ("If a shape is a hexadecagon, it has sixteen sides. This shape has sixteen sides. Therefore, this shape is a hexadecagon.", True, "hexadecagon(X) :- shape(X), has_sixteen_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and ten, it is even. Two thousand and two hundred and twenty is divisible by one thousand and one hundred and ten. Therefore, two thousand and two hundred and twenty is even.", True, "even(X) :- 0 is X mod 1110."),
    ("All insects have antennae. A butterfly is an insect. Therefore, a butterfly has antennae.", True, "has_antennae(X) :- insect(X)."),
    ("If an animal is a bird, it can fly. An ostrich is a bird. Therefore, an ostrich can fly.", False, "can_fly(X) :- bird(X), not(ostrich(X))."),
    ("Every multiple of three hundred and ninety is even. Seven hundred and eighty is a multiple of three hundred and ninety. Therefore, seven hundred and eighty is even.", True, "even(X) :- 0 is X mod 390."),
    ("If a shape is a icosikaipentagon, it has twenty-five sides. This shape has twenty-five sides. Therefore, this shape is a icosikaipentagon.", True, "icosikaipentagon(X) :- shape(X), has_twenty_five_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and twenty, it is even. Two thousand and two hundred and forty is divisible by one thousand and one hundred and twenty. Therefore, two thousand and two hundred and forty is even.", True, "even(X) :- 0 is X mod 1120."),
    ("All amphibians are vertebrates. A salamander is an amphibian. Therefore, a salamander is a vertebrate.", True, "vertebrate(X) :- amphibian(X)."),
    ("If an animal is a fish, it can swim. A shark is a fish. Therefore, a shark can swim.", True, "can_swim(X) :- fish(X)."),
    ("Every multiple of four hundred is even. Eight hundred is a multiple of four hundred. Therefore, eight hundred is even.", True, "even(X) :- 0 is X mod 400."),
    ("If a shape is a icosikaihexagon, it has twenty-six sides. This shape has twenty-six sides. Therefore, this shape is a icosikaihexagon.", True, "icosikaihexagon(X) :- shape(X), has_twenty_six_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and thirty, it is even. Two thousand and two hundred and sixty is divisible by one thousand and one hundred and thirty. Therefore, two thousand and two hundred and sixty is even.", True, "even(X) :- 0 is X mod 1130."),
    ("All mammals have a vertebral column. A cat is a mammal. Therefore, a cat has a vertebral column.", True, "vertebral_column(X) :- mammal(X)."),
    ("If an animal is an amphibian, it can live both on land and in water. A frog is an amphibian. Therefore, a frog can live both on land and in water.", True, "live_land_water(X) :- amphibian(X)."),
    ("Every multiple of four hundred and ten is even. Eight hundred and twenty is a multiple of four hundred and ten. Therefore, eight hundred and twenty is even.", True, "even(X) :- 0 is X mod 410."),
    ("If a shape is a icosikaiheptagon, it has twenty-seven sides. This shape has twenty-seven sides. Therefore, this shape is a icosikaiheptagon.", True, "icosikaiheptagon(X) :- shape(X), has_twenty_seven_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and forty, it is even. Two thousand and two hundred and eighty is divisible by one thousand and one hundred and forty. Therefore, two thousand and two hundred and eighty is even.", True, "even(X) :- 0 is X mod 1140."),
    ("All reptiles have scales. A snake is a reptile. Therefore, a snake has scales.", True, "has_scales(X) :- reptile(X)."),
    ("If an animal is a mammal, it has a neocortex. A dolphin is a mammal. Therefore, a dolphin has a neocortex.", True, "has_neocortex(X) :- mammal(X)."),
    ("Every multiple of four hundred and twenty is even. Eight hundred and forty is a multiple of four hundred and twenty. Therefore, eight hundred and forty is even.", True, "even(X) :- 0 is X mod 420."),
    ("If a shape is a icosikaioctagon, it has twenty-eight sides. This shape has twenty-eight sides. Therefore, this shape is a icosikaioctagon.", True, "icosikaioctagon(X) :- shape(X), has_twenty_eight_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and fifty, it is even. Two thousand and three hundred is divisible by one thousand and one hundred and fifty. Therefore, two thousand and three hundred is even.", True, "even(X) :- 0 is X mod 1150."),
    ("All birds have feathers. A penguin is a bird. Therefore, a penguin has feathers.", True, "has_feathers(X) :- bird(X)."),
    ("If an animal is a reptile, it is cold-blooded. A lizard is a reptile. Therefore, a lizard is cold-blooded.", True, "cold_blooded(X) :- reptile(X)."),
    ("Every multiple of four hundred and thirty is even. Eight hundred and sixty is a multiple of four hundred and thirty. Therefore, eight hundred and sixty is even.", True, "even(X) :- 0 is X mod 430."),
    ("If a shape is a icosikainonagon, it has twenty-nine sides. This shape has twenty-nine sides. Therefore, this shape is a icosikainonagon.", True, "icosikainonagon(X) :- shape(X), has_twenty_nine_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and sixty, it is even. Two thousand and three hundred and twenty is divisible by one thousand and one hundred and sixty. Therefore, two thousand and three hundred and twenty is even.", True, "even(X) :- 0 is X mod 1160."),
    ("All cetaceans are mammals. A whale is a cetacean. Therefore, a whale is a mammal.", True, "mammal(X) :- cetacean(X)."),
    ("If an animal is an insect, it has six legs. A bee is an insect. Therefore, a bee has six legs.", True, "has_six_legs(X) :- insect(X)."),
    ("Every multiple of four hundred and forty is even. Eight hundred and eighty is a multiple of four hundred and forty. Therefore, eight hundred and eighty is even.", True, "even(X) :- 0 is X mod 440."),
    ("If a shape is a icosikaidecagon, it has thirty sides. This shape has thirty sides. Therefore, this shape is a icosikaidecagon.", True, "icosikaidecagon(X) :- shape(X), has_thirty_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and seventy, it is even. Two thousand and three hundred and forty is divisible by one thousand and one hundred and seventy. Therefore, two thousand and three hundred and forty is even.", True, "even(X) :- 0 is X mod 1170."),
    ("All insects have antennae. A butterfly is an insect. Therefore, a butterfly has antennae.", True, "has_antennae(X) :- insect(X)."),
    ("If an animal is a mammal, it has teeth. A giraffe is a mammal. Therefore, a giraffe has teeth.", True, "has_teeth(X) :- mammal(X)."),
    ("Every multiple of two hundred and thirty is even. Four hundred and sixty is a multiple of two hundred and thirty. Therefore, four hundred and sixty is even.", True, "even(X) :- 0 is X mod 230."),
    ("If a shape is a hexadecagon, it has sixteen sides. This shape has sixteen sides. Therefore, this shape is a hexadecagon.", True, "hexadecagon(X) :- shape(X), has_sixteen_sides(X)."),
    ("If a number is divisible by nine hundred and sixty, it is even. One thousand nine hundred and twenty is divisible by nine hundred and sixty. Therefore, one thousand nine hundred and twenty is even.", True, "even(X) :- 0 is X mod 960."),
    ("All arachnids have eight legs. A spider is an arachnid. Therefore, a spider has eight legs.", True, "has_eight_legs(X) :- arachnid(X)."),
    ("If an animal is a mammal, it has mammary glands. A cow is a mammal. Therefore, a cow has mammary glands.", True, "has_mammary_glands(X) :- mammal(X)."),
    ("Every multiple of two hundred and forty is even. Four hundred and eighty is a multiple of two hundred and forty. Therefore, four hundred and eighty is even.", True, "even(X) :- 0 is X mod 240."),
    ("If a shape is an octadecagon, it has eighteen sides. This shape has eighteen sides. Therefore, this shape is an octadecagon.", True, "octadecagon(X) :- shape(X), has_eighteen_sides(X)."),
    ("If a number is divisible by nine hundred and seventy, it is even. One thousand nine hundred and forty is divisible by nine hundred and seventy. Therefore, one thousand nine hundred and forty is even.", True, "even(X) :- 0 is X mod 970."),
    ("All reptiles have scales. A snake is a reptile. Therefore, a snake has scales.", True, "has_scales(X) :- reptile(X)."),
    ("If an animal is a mammal, it is not cold-blooded. A cat is a mammal. Therefore, a cat is not cold-blooded.", True, "not_cold_blooded(X) :- mammal(X)."),
    ("Every multiple of two hundred and fifty is even. Five hundred is a multiple of two hundred and fifty. Therefore, five hundred is even.", True, "even(X) :- 0 is X mod 250."),
    ("If a shape is an icosagon, it has twenty sides. This shape has twenty sides. Therefore, this shape is an icosagon.", True, "icosagon(X) :- shape(X), has_twenty_sides(X)."),
    ("If a number is divisible by nine hundred and eighty, it is even. One thousand nine hundred and sixty is divisible by nine hundred and eighty. Therefore, one thousand nine hundred and sixty is even.", True, "even(X) :- 0 is X mod 980."),
    ("All amphibians are vertebrates. A frog is an amphibian. Therefore, a frog is a vertebrate.", True, "vertebrate(X) :- amphibian(X)."),
    ("If an animal is a mammal, it has a four-chambered heart. A human is a mammal. Therefore, a human has a four-chambered heart.", True, "has_four_chambered_heart(X) :- mammal(X)."),
    ("Every multiple of two hundred and sixty is even. Five hundred and twenty is a multiple of two hundred and sixty. Therefore, five hundred and twenty is even.", True, "even(X) :- 0 is X mod 260."),
    ("If a shape is a dodecahedron, it has twelve faces. This shape has twelve faces. Therefore, this shape is a dodecahedron.", True, "dodecahedron(X) :- shape(X), has_twelve_faces(X)."),
    ("If a number is divisible by nine hundred and ninety, it is even. One thousand nine hundred and eighty is divisible by nine hundred and ninety. Therefore, one thousand nine hundred and eighty is even.", True, "even(X) :- 0 is X mod 990."),
    ("All marsupials have pouches. A kangaroo is a marsupial. Therefore, a kangaroo has a pouch.", True, "has_pouch(X) :- marsupial(X)."),
    ("If an animal is a mammal, it has a spine. A monkey is a mammal. Therefore, a monkey has a spine.", True, "has_spine(X) :- mammal(X)."),
    ("Every multiple of two hundred and seventy is even. Five hundred and forty is a multiple of two hundred and seventy. Therefore, five hundred and forty is even.", True, "even(X) :- 0 is X mod 270."),
    ("If a shape is a tricosagon, it has twenty-three sides. This shape has twenty-three sides. Therefore, this shape is a tricosagon.", True, "tricosagon(X) :- shape(X), has_twenty_three_sides(X)."),
    ("If a number is divisible by one thousand, it is even. Two thousand is divisible by one thousand. Therefore, two thousand is even.", True, "even(X) :- 0 is X mod 1000."),
    ("All primates have opposable thumbs. A chimpanzee is a primate. Therefore, a chimpanzee has opposable thumbs.", True, "has_opposable_thumbs(X) :- primate(X)."),
    ("If an animal is a mammal, it has a neocortex. A dolphin is a mammal. Therefore, a dolphin has a neocortex.", True, "has_neocortex(X) :- mammal(X)."),
    ("Every multiple of two hundred and eighty is even. Five hundred and sixty is a multiple of two hundred and eighty. Therefore, five hundred and sixty is even.", True, "even(X) :- 0 is X mod 280."),
    ("If a shape is a tetracosagon, it has twenty-four sides. This shape has twenty-four sides. Therefore, this shape is a tetracosagon.", True, "tetracosagon(X) :- shape(X), has_twenty_four_sides(X)."),
    ("If a number is divisible by one thousand and ten, it is even. Two thousand and twenty is divisible by one thousand and ten. Therefore, two thousand and twenty is even.", True, "even(X) :- 0 is X mod 1010."),
    ("All cetaceans are aquatic mammals. A whale is a cetacean. Therefore, a whale is an aquatic mammal.", True, "aquatic_mammal(X) :- cetacean(X)."),
    ("If an animal is a reptile, it is cold-blooded. A lizard is a reptile. Therefore, a lizard is cold-blooded.", True, "cold_blooded(X) :- reptile(X)."),
    ("Every multiple of two hundred and ninety is even. Five hundred and eighty is a multiple of two hundred and ninety. Therefore, five hundred and eighty is even.", True, "even(X) :- 0 is X mod 290."),
    ("If a shape is a pentadecagon, it has fifteen sides. This shape has fifteen sides. Therefore, this shape is a pentadecagon.", True, "pentadecagon(X) :- shape(X), has_fifteen_sides(X)."),
    ("If a number is divisible by one thousand and one hundred, it is even. Two thousand and two hundred is divisible by one thousand and one hundred. Therefore, two thousand and two hundred is even.", True, "even(X) :- 0 is X mod 1100."),
    ("If a number is divisible by one thousand and three hundred and fifty, it is even. Two thousand seven hundred is divisible by one thousand and three hundred and fifty. Therefore, two thousand seven hundred is even.", True, "even(X) :- 0 is X mod 1350."),
    ("All primates have opposable thumbs. A chimpanzee is a primate. Therefore, a chimpanzee has opposable thumbs.", True, "has_opposable_thumbs(X) :- primate(X)."),
    ("If a number is divisible by one thousand and five hundred and thirty, it is even. Three thousand and sixty is divisible by one thousand and five hundred and thirty. Therefore, three thousand and sixty is even.", True, "even(X) :- 0 is X mod 1530."),
    ("All cetaceans are aquatic mammals. A dolphin is a cetacean. Therefore, a dolphin is an aquatic mammal.", True, "aquatic_mammal(X) :- cetacean(X)."),
    ("If an animal is a reptile, it lays eggs. A turtle is a reptile. Therefore, a turtle lays eggs.", True, "lays_eggs(X) :- reptile(X)."),
    ("Every multiple of eight hundred is even. One thousand six hundred is a multiple of eight hundred. Therefore, one thousand six hundred is even.", True, "even(X) :- 0 is X mod 800."),
    ("If a shape is a icosikaioktogon, it has eighty-eight sides. This shape has eighty-eight sides. Therefore, this shape is a icosikaioktogon.", True, "icosikaioktogon(X) :- shape(X), has_eighty_eight_sides(X)."),
    ("If an animal is a mammal, it has mammary glands. A cow is a mammal. Therefore, a cow has mammary glands.", True, "has_mammary_glands(X) :- mammal(X)."),
    ("Every multiple of six hundred and thirty is even. One thousand two hundred and sixty is a multiple of six hundred and thirty. Therefore, one thousand two hundred and sixty is even.", True, "even(X) :- 0 is X mod 630."),
    ("If a shape is a icosikaieinonadecagon, it has forty-nine sides. This shape has forty-nine sides. Therefore, this shape is a icosikaieinonadecagon.", True, "icosikaieinonadecagon(X) :- shape(X), has_forty_nine_sides(X)."),
    ("All arachnids have eight legs. A spider is an arachnid. Therefore, a spider has eight legs.", True, "has_eight_legs(X) :- arachnid(X)."),
    ("If an animal is an insect, it has three body parts. A bee is an insect. Therefore, a bee has three body parts.", True, "has_three_body_parts(X) :- insect(X)."),
    ("Every multiple of three hundred is even. Six hundred is a multiple of three hundred. Therefore, six hundred is even.", True, "even(X) :- 0 is X mod 300."),
    ("If a shape is a hexadecagon, it has sixteen sides. This shape has sixteen sides. Therefore, this shape is a hexadecagon.", True, "hexadecagon(X) :- shape(X), has_sixteen_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and ten, it is even. Two thousand and two hundred and twenty is divisible by one thousand and one hundred and ten. Therefore, two thousand and two hundred and twenty is even.", True, "even(X) :- 0 is X mod 1110."),
    ("All insects have antennae. A butterfly is an insect. Therefore, a butterfly has antennae.", True, "has_antennae(X) :- insect(X)."),
    ("If an animal is a bird, it can fly. An ostrich is a bird. Therefore, an ostrich can fly.", False, "can_fly(X) :- bird(X), not(ostrich(X))."),
    ("Every multiple of three hundred and ninety is even. Seven hundred and eighty is a multiple of three hundred and ninety. Therefore, seven hundred and eighty is even.", True, "even(X) :- 0 is X mod 390."),
    ("If a shape is a icosikaipentagon, it has twenty-five sides. This shape has twenty-five sides. Therefore, this shape is a icosikaipentagon.", True, "icosikaipentagon(X) :- shape(X), has_twenty_five_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and twenty, it is even. Two thousand and two hundred and forty is divisible by one thousand and one hundred and twenty. Therefore, two thousand and two hundred and forty is even.", True, "even(X) :- 0 is X mod 1120."),
    ("All amphibians are vertebrates. A salamander is an amphibian. Therefore, a salamander is a vertebrate.", True, "vertebrate(X) :- amphibian(X)."),
    ("If an animal is a fish, it can swim. A shark is a fish. Therefore, a shark can swim.", True, "can_swim(X) :- fish(X)."),
    ("Every multiple of four hundred is even. Eight hundred is a multiple of four hundred. Therefore, eight hundred is even.", True, "even(X) :- 0 is X mod 400."),
    ("If a shape is a icosikaihexagon, it has twenty-six sides. This shape has twenty-six sides. Therefore, this shape is a icosikaihexagon.", True, "icosikaihexagon(X) :- shape(X), has_twenty_six_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and thirty, it is even. Two thousand and two hundred and sixty is divisible by one thousand and one hundred and thirty. Therefore, two thousand and two hundred and sixty is even.", True, "even(X) :- 0 is X mod 1130."),
    ("All mammals have a vertebral column. A cat is a mammal. Therefore, a cat has a vertebral column.", True, "vertebral_column(X) :- mammal(X)."),
    ("If an animal is an amphibian, it can live both on land and in water. A frog is an amphibian. Therefore, a frog can live both on land and in water.", True, "live_land_water(X) :- amphibian(X)."),
    ("Every multiple of four hundred and ten is even. Eight hundred and twenty is a multiple of four hundred and ten. Therefore, eight hundred and twenty is even.", True, "even(X) :- 0 is X mod 410."),
    ("If a shape is a icosikaiheptagon, it has twenty-seven sides. This shape has twenty-seven sides. Therefore, this shape is a icosikaiheptagon.", True, "icosikaiheptagon(X) :- shape(X), has_twenty_seven_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and forty, it is even. Two thousand and two hundred and eighty is divisible by one thousand and one hundred and forty. Therefore, two thousand and two hundred and eighty is even.", True, "even(X) :- 0 is X mod 1140."),
    ("All reptiles have scales. A snake is a reptile. Therefore, a snake has scales.", True, "has_scales(X) :- reptile(X)."),
    ("If an animal is a mammal, it has a neocortex. A dolphin is a mammal. Therefore, a dolphin has a neocortex.", True, "has_neocortex(X) :- mammal(X)."),
    ("Every multiple of four hundred and twenty is even. Eight hundred and forty is a multiple of four hundred and twenty. Therefore, eight hundred and forty is even.", True, "even(X) :- 0 is X mod 420."),
    ("If a shape is a icosikaioctagon, it has twenty-eight sides. This shape has twenty-eight sides. Therefore, this shape is a icosikaioctagon.", True, "icosikaioctagon(X) :- shape(X), has_twenty_eight_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and fifty, it is even. Two thousand and three hundred is divisible by one thousand and one hundred and fifty. Therefore, two thousand and three hundred is even.", True, "even(X) :- 0 is X mod 1150."),
    ("All birds have feathers. A penguin is a bird. Therefore, a penguin has feathers.", True, "has_feathers(X) :- bird(X)."),
    ("If an animal is a reptile, it is cold-blooded. A lizard is a reptile. Therefore, a lizard is cold-blooded.", True, "cold_blooded(X) :- reptile(X)."),
    ("Every multiple of four hundred and thirty is even. Eight hundred and sixty is a multiple of four hundred and thirty. Therefore, eight hundred and sixty is even.", True, "even(X) :- 0 is X mod 430."),
    ("If a shape is a icosikainonagon, it has twenty-nine sides. This shape has twenty-nine sides. Therefore, this shape is a icosikainonagon.", True, "icosikainonagon(X) :- shape(X), has_twenty_nine_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and sixty, it is even. Two thousand and three hundred and twenty is divisible by one thousand and one hundred and sixty. Therefore, two thousand and three hundred and twenty is even.", True, "even(X) :- 0 is X mod 1160."),
    ("All cetaceans are mammals. A whale is a cetacean. Therefore, a whale is a mammal.", True, "mammal(X) :- cetacean(X)."),
    ("If an animal is an insect, it has six legs. A bee is an insect. Therefore, a bee has six legs.", True, "has_six_legs(X) :- insect(X)."),
    ("Every multiple of four hundred and forty is even. Eight hundred and eighty is a multiple of four hundred and forty. Therefore, eight hundred and eighty is even.", True, "even(X) :- 0 is X mod 440."),
    ("If a shape is a icosikaidecagon, it has thirty sides. This shape has thirty sides. Therefore, this shape is a icosikaidecagon.", True, "icosikaidecagon(X) :- shape(X), has_thirty_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and seventy, it is even. Two thousand and three hundred and forty is divisible by one thousand and one hundred and seventy. Therefore, two thousand and three hundred and forty is even.", True, "even(X) :- 0 is X mod 1170."),
    ("All insects have antennae. A butterfly is an insect. Therefore, a butterfly has antennae.", True, "has_antennae(X) :- insect(X)."),
    ("If an animal is a mammal, it has teeth. A giraffe is a mammal. Therefore, a giraffe has teeth.", True, "has_teeth(X) :- mammal(X)."),
    ("Every multiple of two hundred and thirty is even. Four hundred and sixty is a multiple of two hundred and thirty. Therefore, four hundred and sixty is even.", True, "even(X) :- 0 is X mod 230."),
    ("If a shape is a hexadecagon, it has sixteen sides. This shape has sixteen sides. Therefore, this shape is a hexadecagon.", True, "hexadecagon(X) :- shape(X), has_sixteen_sides(X)."),
    ("If a number is divisible by nine hundred and sixty, it is even. One thousand nine hundred and twenty is divisible by nine hundred and sixty. Therefore, one thousand nine hundred and twenty is even.", True, "even(X) :- 0 is X mod 960."),
    ("All arachnids have eight legs. A spider is an arachnid. Therefore, a spider has eight legs.", True, "has_eight_legs(X) :- arachnid(X)."),
    ("If an animal is a mammal, it has mammary glands. A cow is a mammal. Therefore, a cow has mammary glands.", True, "has_mammary_glands(X) :- mammal(X)."),
    ("Every multiple of two hundred and forty is even. Four hundred and eighty is a multiple of two hundred and forty. Therefore, four hundred and eighty is even.", True, "even(X) :- 0 is X mod 240."),
    ("If a shape is an octadecagon, it has eighteen sides. This shape has eighteen sides. Therefore, this shape is an octadecagon.", True, "octadecagon(X) :- shape(X), has_eighteen_sides(X)."),
    ("If a number is divisible by nine hundred and seventy, it is even. One thousand nine hundred and forty is divisible by nine hundred and seventy. Therefore, one thousand nine hundred and forty is even.", True, "even(X) :- 0 is X mod 970."),
    ("All reptiles have scales. A snake is a reptile. Therefore, a snake has scales.", True, "has_scales(X) :- reptile(X)."),
    ("If an animal is a mammal, it is not cold-blooded. A cat is a mammal. Therefore, a cat is not cold-blooded.", True, "not_cold_blooded(X) :- mammal(X)."),
    ("Every multiple of two hundred and fifty is even. Five hundred is a multiple of two hundred and fifty. Therefore, five hundred is even.", True, "even(X) :- 0 is X mod 250."),
    ("If a shape is an icosagon, it has twenty sides. This shape has twenty sides. Therefore, this shape is an icosagon.", True, "icosagon(X) :- shape(X), has_twenty_sides(X)."),
    ("If a number is divisible by nine hundred and eighty, it is even. One thousand nine hundred and sixty is divisible by nine hundred and eighty. Therefore, one thousand nine hundred and sixty is even.", True, "even(X) :- 0 is X mod 980."),
    ("All amphibians are vertebrates. A frog is an amphibian. Therefore, a frog is a vertebrate.", True, "vertebrate(X) :- amphibian(X)."),
    ("If an animal is a mammal, it has a four-chambered heart. A human is a mammal. Therefore, a human has a four-chambered heart.", True, "has_four_chambered_heart(X) :- mammal(X)."),
    ("Every multiple of two hundred and sixty is even. Five hundred and twenty is a multiple of two hundred and sixty. Therefore, five hundred and twenty is even.", True, "even(X) :- 0 is X mod 260."),
    ("If a shape is a dodecahedron, it has twelve faces. This shape has twelve faces. Therefore, this shape is a dodecahedron.", True, "dodecahedron(X) :- shape(X), has_twelve_faces(X)."),
    ("If a number is divisible by nine hundred and ninety, it is even. One thousand nine hundred and eighty is divisible by nine hundred and ninety. Therefore, one thousand nine hundred and eighty is even.", True, "even(X) :- 0 is X mod 990."),
    ("All marsupials have pouches. A kangaroo is a marsupial. Therefore, a kangaroo has a pouch.", True, "has_pouch(X) :- marsupial(X)."),
    ("If an animal is a mammal, it has a spine. A monkey is a mammal. Therefore, a monkey has a spine.", True, "has_spine(X) :- mammal(X)."),
    ("Every multiple of two hundred and seventy is even. Five hundred and forty is a multiple of two hundred and seventy. Therefore, five hundred and forty is even.", True, "even(X) :- 0 is X mod 270."),
    ("If a shape is a tricosagon, it has twenty-three sides. This shape has twenty-three sides. Therefore, this shape is a tricosagon.", True, "tricosagon(X) :- shape(X), has_twenty_three_sides(X)."),
    ("If a number is divisible by one thousand, it is even. Two thousand is divisible by one thousand. Therefore, two thousand is even.", True, "even(X) :- 0 is X mod 1000."),
    ("All primates have opposable thumbs. A chimpanzee is a primate. Therefore, a chimpanzee has opposable thumbs.", True, "has_opposable_thumbs(X) :- primate(X)."),
    ("If an animal is a mammal, it has a neocortex. A dolphin is a mammal. Therefore, a dolphin has a neocortex.", True, "has_neocortex(X) :- mammal(X)."),
    ("Every multiple of two hundred and eighty is even. Five hundred and sixty is a multiple of two hundred and eighty. Therefore, five hundred and sixty is even.", True, "even(X) :- 0 is X mod 280."),
    ("If a shape is a tetracosagon, it has twenty-four sides. This shape has twenty-four sides. Therefore, this shape is a tetracosagon.", True, "tetracosagon(X) :- shape(X), has_twenty_four_sides(X)."),
    ("If a number is divisible by one thousand and ten, it is even. Two thousand and twenty is divisible by one thousand and ten. Therefore, two thousand and twenty is even.", True, "even(X) :- 0 is X mod 1010."),
    ("All cetaceans are aquatic mammals. A whale is a cetacean. Therefore, a whale is an aquatic mammal.", True, "aquatic_mammal(X) :- cetacean(X)."),
    ("If an animal is a reptile, it is cold-blooded. A lizard is a reptile. Therefore, a lizard is cold-blooded.", True, "cold_blooded(X) :- reptile(X)."),
    ("Every multiple of two hundred and ninety is even. Five hundred and eighty is a multiple of two hundred and ninety. Therefore, five hundred and eighty is even.", True, "even(X) :- 0 is X mod 290."),
    ("If a shape is a pentadecagon, it has fifteen sides. This shape has fifteen sides. Therefore, this shape is a pentadecagon.", True, "pentadecagon(X) :- shape(X), has_fifteen_sides(X)."),
    ("If a number is divisible by one thousand and one hundred, it is even. Two thousand and two hundred is divisible by one thousand and one hundred. Therefore, two thousand and two hundred is even.", True, "even(X) :- 0 is X mod 1100."),
    ("If a number is divisible by one thousand and three hundred and fifty, it is even. Two thousand seven hundred is divisible by one thousand and three hundred and fifty. Therefore, two thousand seven hundred is even.", True, "even(X) :- 0 is X mod 1350."),
    ("All primates have opposable thumbs. A chimpanzee is a primate. Therefore, a chimpanzee has opposable thumbs.", True, "has_opposable_thumbs(X) :- primate(X)."),
    ("If a number is divisible by one thousand and five hundred and thirty, it is even. Three thousand and sixty is divisible by one thousand and five hundred and thirty. Therefore, three thousand and sixty is even.", True, "even(X) :- 0 is X mod 1530."),
    ("All cetaceans are aquatic mammals. A dolphin is a cetacean. Therefore, a dolphin is an aquatic mammal.", True, "aquatic_mammal(X) :- cetacean(X)."),
    ("If an animal is a reptile, it lays eggs. A turtle is a reptile. Therefore, a turtle lays eggs.", True, "lays_eggs(X) :- reptile(X)."),
    ("Every multiple of eight hundred is even. One thousand six hundred is a multiple of eight hundred. Therefore, one thousand six hundred is even.", True, "even(X) :- 0 is X mod 800."),
    ("If a shape is a icosikaioktogon, it has eighty-eight sides. This shape has eighty-eight sides. Therefore, this shape is a icosikaioktogon.", True, "icosikaioktogon(X) :- shape(X), has_eighty_eight_sides(X)."),
    ("If an animal is a mammal, it has mammary glands. A cow is a mammal. Therefore, a cow has mammary glands.", True, "has_mammary_glands(X) :- mammal(X)."),
    ("Every multiple of six hundred and thirty is even. One thousand two hundred and sixty is a multiple of six hundred and thirty. Therefore, one thousand two hundred and sixty is even.", True, "even(X) :- 0 is X mod 630."),
    ("If a shape is a icosikaieinonadecagon, it has forty-nine sides. This shape has forty-nine sides. Therefore, this shape is a icosikaieinonadecagon.", True, "icosikaieinonadecagon(X) :- shape(X), has_forty_nine_sides(X)."),
    ("All arachnids have eight legs. A spider is an arachnid. Therefore, a spider has eight legs.", True, "has_eight_legs(X) :- arachnid(X)."),
    ("If an animal is an insect, it has three body parts. A bee is an insect. Therefore, a bee has three body parts.", True, "has_three_body_parts(X) :- insect(X)."),
    ("Every multiple of three hundred is even. Six hundred is a multiple of three hundred. Therefore, six hundred is even.", True, "even(X) :- 0 is X mod 300."),
    ("If a shape is a hexadecagon, it has sixteen sides. This shape has sixteen sides. Therefore, this shape is a hexadecagon.", True, "hexadecagon(X) :- shape(X), has_sixteen_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and ten, it is even. Two thousand and two hundred and twenty is divisible by one thousand and one hundred and ten. Therefore, two thousand and two hundred and twenty is even.", True, "even(X) :- 0 is X mod 1110."),
    ("All insects have antennae. A butterfly is an insect. Therefore, a butterfly has antennae.", True, "has_antennae(X) :- insect(X)."),
    ("If an animal is a bird, it can fly. An ostrich is a bird. Therefore, an ostrich can fly.", False, "can_fly(X) :- bird(X), not(ostrich(X))."),
    ("Every multiple of three hundred and ninety is even. Seven hundred and eighty is a multiple of three hundred and ninety. Therefore, seven hundred and eighty is even.", True, "even(X) :- 0 is X mod 390."),
    ("If a shape is a icosikaipentagon, it has twenty-five sides. This shape has twenty-five sides. Therefore, this shape is a icosikaipentagon.", True, "icosikaipentagon(X) :- shape(X), has_twenty_five_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and twenty, it is even. Two thousand and two hundred and forty is divisible by one thousand and one hundred and twenty. Therefore, two thousand and two hundred and forty is even.", True, "even(X) :- 0 is X mod 1120."),
    ("All amphibians are vertebrates. A salamander is an amphibian. Therefore, a salamander is a vertebrate.", True, "vertebrate(X) :- amphibian(X)."),
    ("If an animal is a fish, it can swim. A shark is a fish. Therefore, a shark can swim.", True, "can_swim(X) :- fish(X)."),
    ("Every multiple of four hundred is even. Eight hundred is a multiple of four hundred. Therefore, eight hundred is even.", True, "even(X) :- 0 is X mod 400."),
    ("If a shape is a icosikaihexagon, it has twenty-six sides. This shape has twenty-six sides. Therefore, this shape is a icosikaihexagon.", True, "icosikaihexagon(X) :- shape(X), has_twenty_six_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and thirty, it is even. Two thousand and two hundred and sixty is divisible by one thousand and one hundred and thirty. Therefore, two thousand and two hundred and sixty is even.", True, "even(X) :- 0 is X mod 1130."),
    ("All mammals have a vertebral column. A cat is a mammal. Therefore, a cat has a vertebral column.", True, "vertebral_column(X) :- mammal(X)."),
    ("If an animal is an amphibian, it can live both on land and in water. A frog is an amphibian. Therefore, a frog can live both on land and in water.", True, "live_land_water(X) :- amphibian(X)."),
    ("Every multiple of four hundred and ten is even. Eight hundred and twenty is a multiple of four hundred and ten. Therefore, eight hundred and twenty is even.", True, "even(X) :- 0 is X mod 410."),
    ("If a shape is a icosikaiheptagon, it has twenty-seven sides. This shape has twenty-seven sides. Therefore, this shape is a icosikaiheptagon.", True, "icosikaiheptagon(X) :- shape(X), has_twenty_seven_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and forty, it is even. Two thousand and two hundred and eighty is divisible by one thousand and one hundred and forty. Therefore, two thousand and two hundred and eighty is even.", True, "even(X) :- 0 is X mod 1140."),
    ("All reptiles have scales. A snake is a reptile. Therefore, a snake has scales.", True, "has_scales(X) :- reptile(X)."),
    ("If an animal is a mammal, it has a neocortex. A dolphin is a mammal. Therefore, a dolphin has a neocortex.", True, "has_neocortex(X) :- mammal(X)."),
    ("Every multiple of four hundred and twenty is even. Eight hundred and forty is a multiple of four hundred and twenty. Therefore, eight hundred and forty is even.", True, "even(X) :- 0 is X mod 420."),
    ("If a shape is a icosikaioctagon, it has twenty-eight sides. This shape has twenty-eight sides. Therefore, this shape is a icosikaioctagon.", True, "icosikaioctagon(X) :- shape(X), has_twenty_eight_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and fifty, it is even. Two thousand and three hundred is divisible by one thousand and one hundred and fifty. Therefore, two thousand and three hundred is even.", True, "even(X) :- 0 is X mod 1150."),
    ("All birds have feathers. A penguin is a bird. Therefore, a penguin has feathers.", True, "has_feathers(X) :- bird(X)."),
    ("If an animal is a reptile, it is cold-blooded. A lizard is a reptile. Therefore, a lizard is cold-blooded.", True, "cold_blooded(X) :- reptile(X)."),
    ("Every multiple of four hundred and thirty is even. Eight hundred and sixty is a multiple of four hundred and thirty. Therefore, eight hundred and sixty is even.", True, "even(X) :- 0 is X mod 430."),
    ("If a shape is a icosikainonagon, it has twenty-nine sides. This shape has twenty-nine sides. Therefore, this shape is a icosikainonagon.", True, "icosikainonagon(X) :- shape(X), has_twenty_nine_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and sixty, it is even. Two thousand and three hundred and twenty is divisible by one thousand and one hundred and sixty. Therefore, two thousand and three hundred and twenty is even.", True, "even(X) :- 0 is X mod 1160."),
    ("All cetaceans are mammals. A whale is a cetacean. Therefore, a whale is a mammal.", True, "mammal(X) :- cetacean(X)."),
    ("If an animal is an insect, it has six legs. A bee is an insect. Therefore, a bee has six legs.", True, "has_six_legs(X) :- insect(X)."),
    ("Every multiple of four hundred and forty is even. Eight hundred and eighty is a multiple of four hundred and forty. Therefore, eight hundred and eighty is even.", True, "even(X) :- 0 is X mod 440."),
    ("If a shape is a icosikaidecagon, it has thirty sides. This shape has thirty sides. Therefore, this shape is a icosikaidecagon.", True, "icosikaidecagon(X) :- shape(X), has_thirty_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and seventy, it is even. Two thousand and three hundred and forty is divisible by one thousand and one hundred and seventy. Therefore, two thousand and three hundred and forty is even.", True, "even(X) :- 0 is X mod 1170."),
    ("All insects have antennae. A butterfly is an insect. Therefore, a butterfly has antennae.", True, "has_antennae(X) :- insect(X)."),
    ("If an animal is a mammal, it has teeth. A giraffe is a mammal. Therefore, a giraffe has teeth.", True, "has_teeth(X) :- mammal(X)."),
    ("Every multiple of two hundred and thirty is even. Four hundred and sixty is a multiple of two hundred and thirty. Therefore, four hundred and sixty is even.", True, "even(X) :- 0 is X mod 230."),
    ("If a shape is a hexadecagon, it has sixteen sides. This shape has sixteen sides. Therefore, this shape is a hexadecagon.", True, "hexadecagon(X) :- shape(X), has_sixteen_sides(X)."),
    ("If a number is divisible by nine hundred and sixty, it is even. One thousand nine hundred and twenty is divisible by nine hundred and sixty. Therefore, one thousand nine hundred and twenty is even.", True, "even(X) :- 0 is X mod 960."),
    ("All arachnids have eight legs. A spider is an arachnid. Therefore, a spider has eight legs.", True, "has_eight_legs(X) :- arachnid(X)."),
    ("If an animal is a mammal, it has mammary glands. A cow is a mammal. Therefore, a cow has mammary glands.", True, "has_mammary_glands(X) :- mammal(X)."),
    ("Every multiple of two hundred and forty is even. Four hundred and eighty is a multiple of two hundred and forty. Therefore, four hundred and eighty is even.", True, "even(X) :- 0 is X mod 240."),
    ("If a shape is an octadecagon, it has eighteen sides. This shape has eighteen sides. Therefore, this shape is an octadecagon.", True, "octadecagon(X) :- shape(X), has_eighteen_sides(X)."),
    ("If a number is divisible by nine hundred and seventy, it is even. One thousand nine hundred and forty is divisible by nine hundred and seventy. Therefore, one thousand nine hundred and forty is even.", True, "even(X) :- 0 is X mod 970."),
    ("All reptiles have scales. A snake is a reptile. Therefore, a snake has scales.", True, "has_scales(X) :- reptile(X)."),
    ("If an animal is a mammal, it is not cold-blooded. A cat is a mammal. Therefore, a cat is not cold-blooded.", True, "not_cold_blooded(X) :- mammal(X)."),
    ("Every multiple of two hundred and fifty is even. Five hundred is a multiple of two hundred and fifty. Therefore, five hundred is even.", True, "even(X) :- 0 is X mod 250."),
    ("If a shape is an icosagon, it has twenty sides. This shape has twenty sides. Therefore, this shape is an icosagon.", True, "icosagon(X) :- shape(X), has_twenty_sides(X)."),
    ("If a number is divisible by nine hundred and eighty, it is even. One thousand nine hundred and sixty is divisible by nine hundred and eighty. Therefore, one thousand nine hundred and sixty is even.", True, "even(X) :- 0 is X mod 980."),
    ("All amphibians are vertebrates. A frog is an amphibian. Therefore, a frog is a vertebrate.", True, "vertebrate(X) :- amphibian(X)."),
    ("If an animal is a mammal, it has a four-chambered heart. A human is a mammal. Therefore, a human has a four-chambered heart.", True, "has_four_chambered_heart(X) :- mammal(X)."),
    ("Every multiple of two hundred and sixty is even. Five hundred and twenty is a multiple of two hundred and sixty. Therefore, five hundred and twenty is even.", True, "even(X) :- 0 is X mod 260."),
    ("If a shape is a dodecahedron, it has twelve faces. This shape has twelve faces. Therefore, this shape is a dodecahedron.", True, "dodecahedron(X) :- shape(X), has_twelve_faces(X)."),
    ("If a number is divisible by nine hundred and ninety, it is even. One thousand nine hundred and eighty is divisible by nine hundred and ninety. Therefore, one thousand nine hundred and eighty is even.", True, "even(X) :- 0 is X mod 990."),
    ("All marsupials have pouches. A kangaroo is a marsupial. Therefore, a kangaroo has a pouch.", True, "has_pouch(X) :- marsupial(X)."),
    ("If an animal is a mammal, it has a spine. A monkey is a mammal. Therefore, a monkey has a spine.", True, "has_spine(X) :- mammal(X)."),
    ("Every multiple of two hundred and seventy is even. Five hundred and forty is a multiple of two hundred and seventy. Therefore, five hundred and forty is even.", True, "even(X) :- 0 is X mod 270."),
    ("If a shape is a tricosagon, it has twenty-three sides. This shape has twenty-three sides. Therefore, this shape is a tricosagon.", True, "tricosagon(X) :- shape(X), has_twenty_three_sides(X)."),
    ("If a number is divisible by one thousand, it is even. Two thousand is divisible by one thousand. Therefore, two thousand is even.", True, "even(X) :- 0 is X mod 1000."),
    ("All primates have opposable thumbs. A chimpanzee is a primate. Therefore, a chimpanzee has opposable thumbs.", True, "has_opposable_thumbs(X) :- primate(X)."),
    ("If an animal is a mammal, it has a neocortex. A dolphin is a mammal. Therefore, a dolphin has a neocortex.", True, "has_neocortex(X) :- mammal(X)."),
    ("Every multiple of two hundred and eighty is even. Five hundred and sixty is a multiple of two hundred and eighty. Therefore, five hundred and sixty is even.", True, "even(X) :- 0 is X mod 280."),
    ("If a shape is a tetracosagon, it has twenty-four sides. This shape has twenty-four sides. Therefore, this shape is a tetracosagon.", True, "tetracosagon(X) :- shape(X), has_twenty_four_sides(X)."),
    ("If a number is divisible by one thousand and ten, it is even. Two thousand and twenty is divisible by one thousand and ten. Therefore, two thousand and twenty is even.", True, "even(X) :- 0 is X mod 1010."),
    ("All cetaceans are aquatic mammals. A whale is a cetacean. Therefore, a whale is an aquatic mammal.", True, "aquatic_mammal(X) :- cetacean(X)."),
    ("If an animal is a reptile, it is cold-blooded. A lizard is a reptile. Therefore, a lizard is cold-blooded.", True, "cold_blooded(X) :- reptile(X)."),
    ("Every multiple of two hundred and ninety is even. Five hundred and eighty is a multiple of two hundred and ninety. Therefore, five hundred and eighty is even.", True, "even(X) :- 0 is X mod 290."),
    ("If a shape is a pentadecagon, it has fifteen sides. This shape has fifteen sides. Therefore, this shape is a pentadecagon.", True, "pentadecagon(X) :- shape(X), has_fifteen_sides(X)."),
    ("If a number is divisible by one thousand and one hundred, it is even. Two thousand and two hundred is divisible by one thousand and one hundred. Therefore, two thousand and two hundred is even.", True, "even(X) :- 0 is X mod 1100."),
    ("If a number is divisible by one thousand and three hundred and fifty, it is even. Two thousand seven hundred is divisible by one thousand and three hundred and fifty. Therefore, two thousand seven hundred is even.", True, "even(X) :- 0 is X mod 1350."),
    ("All primates have opposable thumbs. A chimpanzee is a primate. Therefore, a chimpanzee has opposable thumbs.", True, "has_opposable_thumbs(X) :- primate(X)."),
    ("If a number is divisible by one thousand and five hundred and thirty, it is even. Three thousand and sixty is divisible by one thousand and five hundred and thirty. Therefore, three thousand and sixty is even.", True, "even(X) :- 0 is X mod 1530."),
    ("All cetaceans are aquatic mammals. A dolphin is a cetacean. Therefore, a dolphin is an aquatic mammal.", True, "aquatic_mammal(X) :- cetacean(X)."),
    ("If an animal is a reptile, it lays eggs. A turtle is a reptile. Therefore, a turtle lays eggs.", True, "lays_eggs(X) :- reptile(X)."),
    ("Every multiple of eight hundred is even. One thousand six hundred is a multiple of eight hundred. Therefore, one thousand six hundred is even.", True, "even(X) :- 0 is X mod 800."),
    ("If a shape is a icosikaioktogon, it has eighty-eight sides. This shape has eighty-eight sides. Therefore, this shape is a icosikaioktogon.", True, "icosikaioktogon(X) :- shape(X), has_eighty_eight_sides(X)."),
    ("If an animal is a mammal, it has mammary glands. A cow is a mammal. Therefore, a cow has mammary glands.", True, "has_mammary_glands(X) :- mammal(X)."),
    ("Every multiple of six hundred and thirty is even. One thousand two hundred and sixty is a multiple of six hundred and thirty. Therefore, one thousand two hundred and sixty is even.", True, "even(X) :- 0 is X mod 630."),
    ("If a shape is a icosikaieinonadecagon, it has forty-nine sides. This shape has forty-nine sides. Therefore, this shape is a icosikaieinonadecagon.", True, "icosikaieinonadecagon(X) :- shape(X), has_forty_nine_sides(X)."),
    ("All arachnids have eight legs. A spider is an arachnid. Therefore, a spider has eight legs.", True, "has_eight_legs(X) :- arachnid(X)."),
    ("If an animal is an insect, it has three body parts. A bee is an insect. Therefore, a bee has three body parts.", True, "has_three_body_parts(X) :- insect(X)."),
    ("Every multiple of three hundred is even. Six hundred is a multiple of three hundred. Therefore, six hundred is even.", True, "even(X) :- 0 is X mod 300."),
    ("If a shape is a hexadecagon, it has sixteen sides. This shape has sixteen sides. Therefore, this shape is a hexadecagon.", True, "hexadecagon(X) :- shape(X), has_sixteen_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and ten, it is even. Two thousand and two hundred and twenty is divisible by one thousand and one hundred and ten. Therefore, two thousand and two hundred and twenty is even.", True, "even(X) :- 0 is X mod 1110."),
    ("All insects have antennae. A butterfly is an insect. Therefore, a butterfly has antennae.", True, "has_antennae(X) :- insect(X)."),
    ("If an animal is a bird, it can fly. An ostrich is a bird. Therefore, an ostrich can fly.", False, "can_fly(X) :- bird(X), not(ostrich(X))."),
    ("Every multiple of three hundred and ninety is even. Seven hundred and eighty is a multiple of three hundred and ninety. Therefore, seven hundred and eighty is even.", True, "even(X) :- 0 is X mod 390."),
    ("If a shape is a icosikaipentagon, it has twenty-five sides. This shape has twenty-five sides. Therefore, this shape is a icosikaipentagon.", True, "icosikaipentagon(X) :- shape(X), has_twenty_five_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and twenty, it is even. Two thousand and two hundred and forty is divisible by one thousand and one hundred and twenty. Therefore, two thousand and two hundred and forty is even.", True, "even(X) :- 0 is X mod 1120."),
    ("All amphibians are vertebrates. A salamander is an amphibian. Therefore, a salamander is a vertebrate.", True, "vertebrate(X) :- amphibian(X)."),
    ("If an animal is a fish, it can swim. A shark is a fish. Therefore, a shark can swim.", True, "can_swim(X) :- fish(X)."),
    ("Every multiple of four hundred is even. Eight hundred is a multiple of four hundred. Therefore, eight hundred is even.", True, "even(X) :- 0 is X mod 400."),
    ("If a shape is a icosikaihexagon, it has twenty-six sides. This shape has twenty-six sides. Therefore, this shape is a icosikaihexagon.", True, "icosikaihexagon(X) :- shape(X), has_twenty_six_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and thirty, it is even. Two thousand and two hundred and sixty is divisible by one thousand and one hundred and thirty. Therefore, two thousand and two hundred and sixty is even.", True, "even(X) :- 0 is X mod 1130."),
    ("All mammals have a vertebral column. A cat is a mammal. Therefore, a cat has a vertebral column.", True, "vertebral_column(X) :- mammal(X)."),
    ("If an animal is an amphibian, it can live both on land and in water. A frog is an amphibian. Therefore, a frog can live both on land and in water.", True, "live_land_water(X) :- amphibian(X)."),
    ("Every multiple of four hundred and ten is even. Eight hundred and twenty is a multiple of four hundred and ten. Therefore, eight hundred and twenty is even.", True, "even(X) :- 0 is X mod 410."),
    ("If a shape is a icosikaiheptagon, it has twenty-seven sides. This shape has twenty-seven sides. Therefore, this shape is a icosikaiheptagon.", True, "icosikaiheptagon(X) :- shape(X), has_twenty_seven_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and forty, it is even. Two thousand and two hundred and eighty is divisible by one thousand and one hundred and forty. Therefore, two thousand and two hundred and eighty is even.", True, "even(X) :- 0 is X mod 1140."),
    ("All reptiles have scales. A snake is a reptile. Therefore, a snake has scales.", True, "has_scales(X) :- reptile(X)."),
    ("If an animal is a mammal, it has a neocortex. A dolphin is a mammal. Therefore, a dolphin has a neocortex.", True, "has_neocortex(X) :- mammal(X)."),
    ("Every multiple of four hundred and twenty is even. Eight hundred and forty is a multiple of four hundred and twenty. Therefore, eight hundred and forty is even.", True, "even(X) :- 0 is X mod 420."),
    ("If a shape is a icosikaioctagon, it has twenty-eight sides. This shape has twenty-eight sides. Therefore, this shape is a icosikaioctagon.", True, "icosikaioctagon(X) :- shape(X), has_twenty_eight_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and fifty, it is even. Two thousand and three hundred is divisible by one thousand and one hundred and fifty. Therefore, two thousand and three hundred is even.", True, "even(X) :- 0 is X mod 1150."),
    ("All birds have feathers. A penguin is a bird. Therefore, a penguin has feathers.", True, "has_feathers(X) :- bird(X)."),
    ("If an animal is a reptile, it is cold-blooded. A lizard is a reptile. Therefore, a lizard is cold-blooded.", True, "cold_blooded(X) :- reptile(X)."),
    ("Every multiple of four hundred and thirty is even. Eight hundred and sixty is a multiple of four hundred and thirty. Therefore, eight hundred and sixty is even.", True, "even(X) :- 0 is X mod 430."),
    ("If a shape is a icosikainonagon, it has twenty-nine sides. This shape has twenty-nine sides. Therefore, this shape is a icosikainonagon.", True, "icosikainonagon(X) :- shape(X), has_twenty_nine_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and sixty, it is even. Two thousand and three hundred and twenty is divisible by one thousand and one hundred and sixty. Therefore, two thousand and three hundred and twenty is even.", True, "even(X) :- 0 is X mod 1160."),
    ("All cetaceans are mammals. A whale is a cetacean. Therefore, a whale is a mammal.", True, "mammal(X) :- cetacean(X)."),
    ("If an animal is an insect, it has six legs. A bee is an insect. Therefore, a bee has six legs.", True, "has_six_legs(X) :- insect(X)."),
    ("Every multiple of four hundred and forty is even. Eight hundred and eighty is a multiple of four hundred and forty. Therefore, eight hundred and eighty is even.", True, "even(X) :- 0 is X mod 440."),
    ("If a shape is a icosikaidecagon, it has thirty sides. This shape has thirty sides. Therefore, this shape is a icosikaidecagon.", True, "icosikaidecagon(X) :- shape(X), has_thirty_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and seventy, it is even. Two thousand and three hundred and forty is divisible by one thousand and one hundred and seventy. Therefore, two thousand and three hundred and forty is even.", True, "even(X) :- 0 is X mod 1170."),
    ("All insects have antennae. A butterfly is an insect. Therefore, a butterfly has antennae.", True, "has_antennae(X) :- insect(X)."),
    ("If an animal is a mammal, it has teeth. A giraffe is a mammal. Therefore, a giraffe has teeth.", True, "has_teeth(X) :- mammal(X)."),
    ("Every multiple of four hundred and fifty is even. Nine hundred is a multiple of four hundred and fifty. Therefore, nine hundred is even.", True, "even(X) :- 0 is X mod 450."),
    ("If a shape is a icosikaieikosi, it has thirty-one sides. This shape has thirty-one sides. Therefore, this shape is a icosikaieikosi.", True, "icosikaieikosi(X) :- shape(X), has_thirty_one_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and eighty, it is even. Two thousand and three hundred and sixty is divisible by one thousand and one hundred and eighty. Therefore, two thousand and three hundred and sixty is even.", True, "even(X) :- 0 is X mod 1180."),
    ("All arachnids have eight legs. A spider is an arachnid. Therefore, a spider has eight legs.", True, "has_eight_legs(X) :- arachnid(X)."),
    ("If an animal is a bird, it has wings. An eagle is a bird. Therefore, an eagle has wings.", True, "has_wings(X) :- bird(X)."),
    ("Every multiple of four hundred and sixty is even. Nine hundred and twenty is a multiple of four hundred and sixty. Therefore, nine hundred and twenty is even.", True, "even(X) :- 0 is X mod 460."),
    ("If a shape is a icosikaieidodecagon, it has thirty-two sides. This shape has thirty-two sides. Therefore, this shape is a icosikaieidodecagon.", True, "icosikaieidodecagon(X) :- shape(X), has_thirty_two_sides(X)."),
    ("If a number is divisible by one thousand and one hundred and ninety, it is even. Two thousand and three hundred and eighty is divisible by one thousand and one hundred and ninety. Therefore, two thousand and three hundred and eighty is even.", True, "even(X) :- 0 is X mod 1190."),
    ("All marsupials have a pouch. A kangaroo is a marsupial. Therefore, a kangaroo has a pouch.", True, "has_pouch(X) :- marsupial(X)."),
    ("If an animal is a fish, it has gills. A salmon is a fish. Therefore, a salmon has gills.", True, "has_gills(X) :- fish(X)."),
    ("Every multiple of four hundred and seventy is even. Nine hundred and forty is a multiple of four hundred and seventy. Therefore, nine hundred and forty is even.", True, "even(X) :- 0 is X mod 470."),
    ("If a shape is a icosikaieitriakontagon, it has thirty-three sides. This shape has thirty-three sides. Therefore, this shape is a icosikaieitriakontagon.", True, "icosikaieitriakontagon(X) :- shape(X), has_thirty_three_sides(X)."),
    ("If a number is divisible by one thousand and two hundred, it is even. Two thousand and four hundred is divisible by one thousand and two hundred. Therefore, two thousand and four hundred is even.", True, "even(X) :- 0 is X mod 1200."),
    ("If a number is divisible by one thousand and three hundred and twenty, it is even. Two thousand and six hundred and forty is divisible by one thousand and three hundred and twenty. Therefore, two thousand and six hundred and forty is even.", True, "even(X) :- 0 is X mod 1320."),
    ("All amphibians are vertebrates. A salamander is an amphibian. Therefore, a salamander is a vertebrate.", True, "vertebrate(X) :- amphibian(X)."),
    ("If an animal is a mammal, it has mammary glands. A cow is a mammal. Therefore, a cow has mammary glands.", True, "has_mammary_glands(X) :- mammal(X)."),
    ("Every multiple of six hundred is even. One thousand two hundred is a multiple of six hundred. Therefore, one thousand two hundred is even.", True, "even(X) :- 0 is X mod 600."),
    ("If a shape is a icosikaieihexadecagon, it has forty-six sides. This shape has forty-six sides. Therefore, this shape is a icosikaieihexadecagon.", True, "icosikaieihexadecagon(X) :- shape(X), has_forty_six_sides(X)."),
    ("All amphibians are vertebrates. A frog is an amphibian. Therefore, a frog is a vertebrate.", True, "vertebrate(X) :- amphibian(X)."),
    ("If an animal is a mammal, it has hair. A bear is a mammal. Therefore, a bear has hair.", True, "has_hair(X) :- mammal(X)."),
    ("Every multiple of four hundred and eighty is even. Nine hundred and sixty is a multiple of four hundred and eighty. Therefore, nine hundred and sixty is even.", True, "even(X) :- 0 is X mod 480."),
    ("If a shape is a icosikaieitetragon, it has thirty-four sides. This shape has thirty-four sides. Therefore, this shape is a icosikaieitetragon.", True, "icosikaieitetragon(X) :- shape(X), has_thirty_four_sides(X)."),
    ("If a number is divisible by one thousand and two hundred and ten, it is even. Two thousand and four hundred and twenty is divisible by one thousand and two hundred and ten. Therefore, two thousand and four hundred and twenty is even.", True, "even(X) :- 0 is X mod 1210."),
    ("All reptiles lay eggs. A turtle is a reptile. Therefore, a turtle lays eggs.", True, "lays_eggs(X) :- reptile(X)."),
    ("If an animal is a mammal, it is warm-blooded. A human is a mammal. Therefore, a human is warm-blooded.", True, "warm_blooded(X) :- mammal(X)."),
    ("Every multiple of four hundred and ninety is even. Nine hundred and eighty is a multiple of four hundred and ninety. Therefore, nine hundred and eighty is even.", True, "even(X) :- 0 is X mod 490."),
    ("If a shape is a icosikaieipentagon, it has thirty-five sides. This shape has thirty-five sides. Therefore, this shape is a icosikaieipentagon.", True, "icosikaieipentagon(X) :- shape(X), has_thirty_five_sides(X)."),
    ("If a number is divisible by one thousand and two hundred and twenty, it is even. Two thousand and four hundred and forty is divisible by one thousand and two hundred and twenty. Therefore, two thousand and four hundred and forty is even.", True, "even(X) :- 0 is X mod 1220."),
    ("If a shape is a icosikaieihexagon, it has thirty-six sides. This shape has thirty-six sides. Therefore, this shape is a icosikaieihexagon.", True, "icosikaieihexagon(X) :- shape(X), has_thirty_six_sides(X)."),
    ("If an animal is a bird, it can fly. An ostrich is a bird. Therefore, an ostrich can fly.", False, "can_fly(X) :- bird(X), not(ostrich(X))."),
    ("Every multiple of five hundred is even. One thousand is a multiple of five hundred. Therefore, one thousand is even.", True, "even(X) :- 0 is X mod 500."),
    ("If a shape is a icosikaieihexagon, it has thirty-six sides. This shape has thirty-six sides. Therefore, this shape is a icosikaieihexagon.", True, "icosikaieihexagon(X) :- shape(X), has_thirty_six_sides(X)."),
    ("If a number is divisible by one thousand and two hundred and fifty, it is even. Two thousand and five hundred is divisible by one thousand and two hundred and fifty. Therefore, two thousand and five hundred is even.", True, "even(X) :- 0 is X mod 1250."),
    ("All mammals have a vertebral column. A cat is a mammal. Therefore, a cat has a vertebral column.", True, "has_vertebral_column(X) :- mammal(X)."),
    ("If an animal is an amphibian, it can live both on land and in water. A frog is an amphibian. Therefore, a frog can live both on land and in water.", True, "lives_on_land_and_water(X) :- amphibian(X)."),
    ("Every multiple of five hundred and thirty is even. One thousand and sixty is a multiple of five hundred and thirty. Therefore, one thousand and sixty is even.", True, "even(X) :- 0 is X mod 530."),
    ("If a shape is a icosikaieinonagon, it has thirty-nine sides. This shape has thirty-nine sides. Therefore, this shape is a icosikaieinonagon.", True, "icosikaieinonagon(X) :- shape(X), has_thirty_nine_sides(X)."),
    ("If a number is divisible by one thousand and two hundred and sixty, it is even. Two thousand and five hundred and twenty is divisible by one thousand and two hundred and sixty. Therefore, two thousand and five hundred and twenty is even.", True, "even(X) :- 0 is X mod 1260."),
    ("All birds have feathers. A sparrow is a bird. Therefore, a sparrow has feathers.", True, "has_feathers(X) :- bird(X)."),
    ("If an animal is a mammal, it has a neocortex. A dolphin is a mammal. Therefore, a dolphin has a neocortex.", True, "has_neocortex(X) :- mammal(X)."),
    ("Every multiple of five hundred and forty is even. One thousand and eighty is a multiple of five hundred and forty. Therefore, one thousand and eighty is even.", True, "even(X) :- 0 is X mod 540."),
    ("If a shape is a icosikaiedecagon, it has forty sides. This shape has forty sides. Therefore, this shape is a icosikaiedecagon.", True, "icosikaiedecagon(X) :- shape(X), has_forty_sides(X)."),
    ("If a number is divisible by one thousand and two hundred and seventy, it is even. Two thousand and five hundred and forty is divisible by one thousand and two hundred and seventy. Therefore, two thousand and five hundred and forty is even.", True, "even(X) :- 0 is X mod 1270."),
    ("All cetaceans can swim. A dolphin is a cetacean. Therefore, a dolphin can swim.", True, "can_swim(X) :- cetacean(X)."),
    ("If an animal is a bird, it has a beak. A parrot is a bird. Therefore, a parrot has a beak.", True, "has_beak(X) :- bird(X)."),
    ("Every multiple of five hundred and fifty is even. One thousand and one hundred is a multiple of five hundred and fifty. Therefore, one thousand and one hundred is even.", True, "even(X) :- 0 is X mod 550."),
    ("If a shape is a icosikaieihenagon, it has forty-one sides. This shape has forty-one sides. Therefore, this shape is a icosikaieihenagon.", True, "icosikaieihenagon(X) :- shape(X), has_forty_one_sides(X)."),
    ("If a number is divisible by one thousand and two hundred and eighty, it is even. Two thousand and five hundred and sixty is divisible by one thousand and two hundred and eighty. Therefore, two thousand and five hundred and sixty is even.", True, "even(X) :- 0 is X mod 1280."),
    ("All insects have antennae. A butterfly is an insect. Therefore, a butterfly has antennae.", True, "has_antennae(X) :- insect(X)."),
    ("If an animal is a fish, it lives in water. A goldfish is a fish. Therefore, a goldfish lives in water.", True, "lives_in_water(X) :- fish(X)."),
    ("Every multiple of five hundred and sixty is even. One thousand and one hundred and twenty is a multiple of five hundred and sixty. Therefore, one thousand and one hundred and twenty is even.", True, "even(X) :- 0 is X mod 560."),
    ("If a shape is a icosikaieidodekaheptagon, it has forty-two sides. This shape has forty-two sides. Therefore, this shape is a icosikaieidodekaheptagon.", True, "icosikaieidodekaheptagon(X) :- shape(X), has_forty_two_sides(X)."),
    ("If a number is divisible by one thousand and two hundred and ninety, it is even. Two thousand and five hundred and eighty is divisible by one thousand and two hundred and ninety. Therefore, two thousand and five hundred and eighty is even.", True, "even(X) :- 0 is X mod 1290."),
    ("All mammals are endothermic. A mouse is a mammal. Therefore, a mouse is endothermic.", True, "endothermic(X) :- mammal(X)."),
    ("If an animal is a reptile, it has scales. A snake is a reptile. Therefore, a snake has scales.", True, "has_scales(X) :- reptile(X)."),
    ("Every multiple of five hundred and seventy is even. One thousand one hundred and forty is a multiple of five hundred and seventy. Therefore, one thousand one hundred and forty is even.", True, "even(X) :- 0 is X mod 570."),
    ("If a shape is a icosikaieitridecagon, it has forty-three sides. This shape has forty-three sides. Therefore, this shape is a icosikaieitridecagon.", True, "icosikaieitridecagon(X) :- shape(X), has_forty_three_sides(X)."),
    ("If a number is divisible by one thousand and three hundred, it is even. Two thousand and six hundred is divisible by one thousand and three hundred. Therefore, two thousand and six hundred is even.", True, "even(X) :- 0 is X mod 1300."),
    ("All birds can fly. A penguin is a bird. Therefore, a penguin can fly.", False, "can_fly(X) :- bird(X), not(penguin(X))."),
    ("If an animal is a mammal, it has a backbone. A whale is a mammal. Therefore, a whale has a backbone.", True, "has_backbone(X) :- mammal(X)."),
    ("Every multiple of five hundred and eighty is even. One thousand one hundred and sixty is a multiple of five hundred and eighty. Therefore, one thousand one hundred and sixty is even.", True, "even(X) :- 0 is X mod 580."),
    ("If a shape is a icosikaieitetragon, it has thirty-four sides. This shape has thirty-four sides. Therefore, this shape is a icosikaieitetragon.", True, "icosikaieitetragon(X) :- shape(X), has_thirty_four_sides(X)."),
    ("If a number is divisible by one thousand and three hundred and ten, it is even. Two thousand six hundred and twenty is divisible by one thousand and three hundred and ten. Therefore, two thousand six hundred and twenty is even.", True, "even(X) :- 0 is X mod 1310."),
    ("All cetaceans are aquatic. A dolphin is a cetacean. Therefore, a dolphin is aquatic.", True, "aquatic(X) :- cetacean(X)."),
    ("If an animal is an insect, it has six legs. A bee is an insect. Therefore, a bee has six legs.", True, "has_six_legs(X) :- insect(X)."),
    ("Every multiple of five hundred and ninety is even. One thousand one hundred and eighty is a multiple of five hundred and ninety. Therefore, one thousand one hundred and eighty is even.", True, "even(X) :- 0 is X mod 590."),
    ("If a shape is a icosikaieipentadecagon, it has forty-five sides. This shape has forty-five sides. Therefore, this shape is a icosikaieipentadecagon.", True, "icosikaieipentadecagon(X) :- shape(X), has_forty_five_sides(X)."),
    ("If a number is divisible by one thousand and three hundred and thirty, it is even. Two thousand six hundred and sixty is divisible by one thousand and three hundred and thirty. Therefore, two thousand six hundred and sixty is even.", True, "even(X) :- 0 is X mod 1330."),
    ("All arachnids have eight legs. A spider is an arachnid. Therefore, a spider has eight legs.", True, "has_eight_legs(X) :- arachnid(X)."),
    ("If an animal is an avian, it has feathers. A chicken is an avian. Therefore, a chicken has feathers.", True, "has_feathers(X) :- avian(X)."),
    ("Every multiple of six hundred and ten is even. One thousand two hundred and twenty is a multiple of six hundred and ten. Therefore, one thousand two hundred and twenty is even.", True, "even(X) :- 0 is X mod 610."),
    ("If a shape is a icosikaieiseptadecagon, it has forty-seven sides. This shape has forty-seven sides. Therefore, this shape is a icosikaieiseptadecagon.", True, "icosikaieiseptadecagon(X) :- shape(X), has_forty_seven_sides(X)."),
    ("If a number is divisible by one thousand and three hundred and forty, it is even. Two thousand six hundred and eighty is divisible by one thousand and three hundred and forty. Therefore, two thousand six hundred and eighty is even.", True, "even(X) :- 0 is X mod 1340."),
    ("All marsupials have a pouch. A kangaroo is a marsupial. Therefore, a kangaroo has a pouch.", True, "has_pouch(X) :- marsupial(X)."),
    ("If an animal is a bird, it has wings. An eagle is a bird. Therefore, an eagle has wings.", True, "has_wings(X) :- bird(X)."),
    ("Every multiple of six hundred and twenty is even. One thousand two hundred and forty is a multiple of six hundred and twenty. Therefore, one thousand two hundred and forty is even.", True, "even(X) :- 0 is X mod 620."),
    ("If a shape is a icosikaieioctadecagon, it has forty-eight sides. This shape has forty-eight sides. Therefore, this shape is a icosikaieioctadecagon.", True, "icosikaieioctadecagon(X) :- shape(X), has_forty_eight_sides(X)."),
    ("If a number is divisible by one thousand and three hundred and fifty, it is even. Two thousand seven hundred is divisible by one thousand and three hundred and fifty. Therefore, two thousand seven hundred is even.", True, "even(X) :- 0 is X mod 1350."),
    ("All primates have opposable thumbs. A chimpanzee is a primate. Therefore, a chimpanzee has opposable thumbs.", True, "has_opposable_thumbs(X) :- primate(X)."),
    ("If an animal is a mammal, it has mammary glands. A cow is a mammal. Therefore, a cow has mammary glands.", True, "has_mammary_glands(X) :- mammal(X)."),
    ("Every multiple of six hundred and thirty is even. One thousand two hundred and sixty is a multiple of six hundred and thirty. Therefore, one thousand two hundred and sixty is even.", True, "even(X) :- 0 is X mod 630."),
    ("If a shape is a icosikaieinonadecagon, it has forty-nine sides. This shape has forty-nine sides. Therefore, this shape is a icosikaieinonadecagon.", True, "icosikaieinonadecagon(X) :- shape(X), has_forty_nine_sides(X)."),
    ("If a number is divisible by one thousand and five hundred and thirty, it is even. Three thousand and sixty is divisible by one thousand and five hundred and thirty. Therefore, three thousand and sixty is even.", True, "even(X) :- 0 is X mod 1530."),
    ("All insects have wings. A butterfly is an insect. Therefore, a butterfly has wings.", True, "has_wings(X) :- insect(X)."),
    ("If a plant is a cactus, it has spines. This plant is a cactus. Therefore, this plant has spines.", True, "has_spines(X) :- cactus(X)."),
    ("All squares are rectangles. This shape is a square. Therefore, this shape is a rectangle.", True, "rectangle(X) :- square(X)."),
    ("If a number is divisible by two, it is even. Five is divisible by two. Therefore, five is even.", False, "even(X) :- 0 is X mod 2, X \= 5."),
    ("Every prime number is odd. Two is a prime number. Therefore, two is odd.", False, "odd(X) :- prime(X), X \= 2."),
    ("If an animal is a reptile, it is cold-blooded. A crocodile is a reptile. Therefore, a crocodile is cold-blooded.", True, "cold_blooded(X) :- reptile(X)."),
    ("If an animal is a mammal, it has a four-chambered heart. A lion is a mammal. Therefore, a lion has a four-chambered heart.", True, "has_four_chambered_heart(X) :- mammal(X)."),
    ("If a number is divisible by ten, it is even. Twenty is divisible by ten. Therefore, twenty is even.", True, "even(X) :- 0 is X mod 10."),
    ("All mammals have vertebrae. A whale is a mammal. Therefore, a whale has vertebrae.", True, "has_vertebrae(X) :- mammal(X)."),
    ("If an animal is a bird, it can fly. An ostrich is a bird. Therefore, an ostrich can fly.", False, "can_fly(X) :- bird(X), X \= ostrich."),
    ("Every even number is divisible by two. Seven is an even number. Therefore, seven is divisible by two.", False, "divisible_by_two(X) :- even(X), X \= 7."),
    ("If a shape is a triangle, it has three sides. This shape is a triangle. Therefore, this shape has three sides.", True, "three_sides(X) :- triangle(X)."),
    ("Every multiple of eight hundred and ten is even. One thousand six hundred and twenty is a multiple of eight hundred and ten. Therefore, one thousand six hundred and twenty is even.", True, "even(X) :- 0 is X mod 810."),
    ("If a shape is a icosikaienneagon, it has ninety-nine sides. This shape has ninety-nine sides. Therefore, this shape is a icosikaienneagon.", True, "icosikaienneagon(X) :- shape(X), has_ninety_nine_sides(X)."),
    ("If a planet is in the solar system, it orbits the sun. Earth is a planet in the solar system. Therefore, Earth orbits the sun.", True, "orbits_sun(X) :- planet_in_solar_system(X)."),
    ("Every prime number greater than two is odd. Two is a prime number greater than two. Therefore, two is odd.", False, "odd(X) :- prime(X), X > 2, X \= 2."),
    ("If an object is a square, all its sides are equal. This object is a square. Therefore, all its sides are equal.", True, "all_sides_equal(X) :- square(X)."),
    ("All citrus fruits are rich in vitamin C. An orange is a citrus fruit. Therefore, an orange is rich in vitamin C.", True, "rich_in_vitamin_c(X) :- citrus_fruit(X)."),
    ("If a number is divisible by four, it is even. Sixteen is divisible by four. Therefore, sixteen is even.", True, "even(X) :- 0 is X mod 4."),
    ("If a number is divisible by two, it is even. Four is divisible by two. Therefore, four is even.", True, "even(X) :- 0 is X mod 2."),
    ("All birds have feathers. A penguin is a bird. Therefore, a penguin has feathers.", True, "has_feathers(X) :- bird(X)."),
    ("If an animal is a mammal, it is warm-blooded. A dolphin is a mammal. Therefore, a dolphin is warm-blooded.", True, "warm_blooded(X) :- mammal(X)."),
    ("Every prime number greater than two is odd. Three is a prime number greater than two. Therefore, three is odd.", True, "odd(X) :- prime(X), X > 2."),
    ("If a shape is a quadrilateral, it has four sides. A rectangle is a quadrilateral. Therefore, a rectangle has four sides.", True, "has_four_sides(X) :- quadrilateral(X)."),
    ("If a number is divisible by three, it is odd. Nine is divisible by three. Therefore, nine is odd.", True, "odd(X) :- 0 is X mod 3."),
    ("All mammals breathe air. A whale is a mammal. Therefore, a whale breathes air.", True, "breathe_air(X) :- mammal(X)."),
    ("If an animal is a fish, it can swim. A shark is a fish. Therefore, a shark can swim.", True, "can_swim(X) :- fish(X)."),
    ("Every prime number has exactly two distinct natural number divisors. Eleven is a prime number. Therefore, eleven has exactly two distinct natural number divisors.", True, "prime_divisors(X) :- prime(X), distinct_natural_number_divisors(X, 2)."),
    ("If a plant is a fern, it reproduces via spores. A bracken is a fern. Therefore, a bracken reproduces via spores.", True, "reproduces_via_spores(X) :- fern(X)."),
    ("If a number is divisible by two thousand, it is even. Four thousand is divisible by two thousand. Therefore, four thousand is even.", True, "even(X) :- 0 is X mod 2000."),
    ("All planets in our solar system revolve around the sun. Mars is a planet in our solar system. Therefore, Mars revolves around the sun.", True, "revolves_around_sun(X) :- planet_in_our_solar_system(X)."),
    ("If an animal is a bird, it has feathers. A penguin is a bird. Therefore, a penguin has feathers.", True, "has_feathers(X) :- bird(X)."),
    ("Every square has four equal sides. This shape is a square. Therefore, this shape has four equal sides.", True, "four_equal_sides(X) :- square(X)."),
    ("If a number is divisible by two thousand and ten, it is even. Four thousand and twenty is divisible by two thousand and ten. Therefore, four thousand and twenty is even.", True, "even(X) :- 0 is X mod 2010."),
    ("All birds lay eggs. A swan is a bird. Therefore, a swan lays eggs.", True, "lays_eggs(X) :- bird(X)."),
    ("If an animal is a mammal, it has hair. A human is a mammal. Therefore, a human has hair.", True, "has_hair(X) :- mammal(X)."),
    ("Every multiple of one hundred and eleven is odd. Two hundred and twenty-two is a multiple of one hundred and eleven. Therefore, two hundred and twenty-two is odd.", False, "odd(X) :- 0 is X mod 111, X \= 222."),
    ("If a shape is a dodecagon, it has twelve sides. This shape has twelve sides. Therefore, this shape is a dodecagon.", True, "dodecagon(X) :- shape(X), has_twelve_sides(X)."),
    ("If a number is divisible by two thousand and twenty, it is even. Four thousand and forty is divisible by two thousand and twenty. Therefore, four thousand and forty is even.", True, "even(X) :- 0 is X mod 2020."),
    ("All insects have six legs. A spider is an insect. Therefore, a spider has six legs.", False, "has_six_legs(X) :- insect(X), X \= spider."),
    ("If an animal is an amphibian, it can live both on land and in water. A salamander is an amphibian. Therefore, a salamander can live both on land and in water.", True, "lives_on_land_and_water(X) :- amphibian(X)."),
    ("Every multiple of one hundred and thirteen is odd. Two hundred and twenty-six is a multiple of one hundred and thirteen. Therefore, two hundred and twenty-six is odd.", False, "odd(X) :- 0 is X mod 113, X \= 226."),
    ("If a shape is a triskaidecagon, it has thirteen sides. This shape has thirteen sides. Therefore, this shape is a triskaidecagon.", True, "triskaidecagon(X) :- shape(X), has_thirteen_sides(X)."),
    ("If a number is divisible by two thousand and twenty, it is even. Four thousand and forty is divisible by two thousand and twenty. Therefore, four thousand and forty is even.", True, "even(X) :- 0 is X mod 2020."),
    ("All insects have six legs. A spider is an insect. Therefore, a spider has six legs.", False, "has_six_legs(X) :- insect(X), X \= spider."),
    ("If an animal is an amphibian, it can live both on land and in water. A salamander is an amphibian. Therefore, a salamander can live both on land and in water.", True, "lives_on_land_and_water(X) :- amphibian(X)."),
    ("Every multiple of one hundred and thirteen is odd. Two hundred and twenty-six is a multiple of one hundred and thirteen. Therefore, two hundred and twenty-six is odd.", False, "odd(X) :- 0 is X mod 113, X \= 226."),
    ("If a shape is a triskaidecagon, it has thirteen sides. This shape has thirteen sides. Therefore, this shape is a triskaidecagon.", True, "triskaidecagon(X) :- shape(X), has_thirteen_sides(X)."),
    // ... 30 more statements to be added here ...
]

class TestLogicalStatements(unittest.TestCase):

    def test_statement_1(self):
        english_statement, expected, prolog_statement = logical_statements[0]
        result = self.evaluate_prolog_statement(prolog_statement)
        self.assertEqual(result, expected, f"Statement failed: {english_statement}")

    def test_statement_2(self):
        english_statement, expected, prolog_statement = logical_statements[1]
        result = self.evaluate_prolog_statement(prolog_statement)
        self.assertEqual(result, expected, f"Statement failed: {english_statement}")

    def test_statement_3(self):
        english_statement, expected, prolog_statement = logical_statements[2]
        result = self.evaluate_prolog_statement(prolog_statement)
        self.assertEqual(result, expected, f"Statement failed: {english_statement}")

    def test_statement_4(self):
        english_statement, expected, prolog_statement = logical_statements[3]
        result = self.evaluate_prolog_statement(prolog_statement)
        self.assertEqual(result, expected, f"Statement failed: {english_statement}")

    def test_statement_5(self):
        english_statement, expected, prolog_statement = logical_statements[4]
        result = self.evaluate_prolog_statement(prolog_statement)
        self.assertEqual(result, expected, f"Statement failed: {english_statement}")

    def test_statement_6(self):
        english_statement, expected, prolog_statement = logical_statements[5]
        result = self.evaluate_prolog_statement(prolog_statement)
        self.assertEqual(result, expected, f"Statement failed: {english_statement}")

    def test_statement_7(self):
        english_statement, expected, prolog_statement = logical_statements[6]
        result = self.evaluate_prolog_statement(prolog_statement)
        self.assertEqual(result, expected, f"Statement failed: {english_statement}")

    def test_statement_8(self):
        english_statement, expected, prolog_statement = logical_statements[7]
        result = self.evaluate_prolog_statement(prolog_statement)
        self.assertEqual(result, expected, f"Statement failed: {english_statement}")

    def test_statement_9(self):
        english_statement, expected, prolog_statement = logical_statements[8]
        result = self.evaluate_prolog_statement(prolog_statement)
        self.assertEqual(result, expected, f"Statement failed: {english_statement}")

    def test_statement_10(self):
        english_statement, expected, prolog_statement = logical_statements[9]
        result = self.evaluate_prolog_statement(prolog_statement)
        self.assertEqual(result, expected, f"Statement failed: {english_statement}")

    def test_statement_389(self):
        english_statement, expected, prolog_statement = logical_statements[388]
        result = self.evaluate_prolog_statement(prolog_statement)
        self.assertEqual(result, expected, f"Statement failed: {english_statement}")

    def test_statement_390(self):
        english_statement, expected, prolog_statement = logical_statements[389]
        result = self.evaluate_prolog_statement(prolog_statement)
        self.assertEqual(result, expected, f"Statement failed: {english_statement}")

    def test_statement_391(self):
        english_statement, expected, prolog_statement = logical_statements[390]
        result = self.evaluate_prolog_statement(prolog_statement)
        self.assertEqual(result, expected, f"Statement failed: {english_statement}")

    def test_statement_392(self):
        english_statement, expected, prolog_statement = logical_statements[391]
        result = self.evaluate_prolog_statement(prolog_statement)
        self.assertEqual(result, expected, f"Statement failed: {english_statement}")

    def test_statement_393(self):
        english_statement, expected, prolog_statement = logical_statements[392]
        result = self.evaluate_prolog_statement(prolog_statement)
        self.assertEqual(result, expected, f"Statement failed: {english_statement}")

    # Placeholder for the evaluate_prolog_statement method
    def evaluate_prolog_statement(self, prolog_statement):
        """
        Evaluate the given Prolog statement using a Prolog interpreter.
        Returns True if the statement is logically valid, False otherwise.
        """
        try:
            # Call the Prolog interpreter using subprocess
            result = subprocess.run(['swipl', '-q', '-t', prolog_statement, '/home/ubuntu/logical/tests/logical_statements.pl'],
                                    capture_output=True, text=True, check=True)
            # Parse the output from Prolog interpreter
            output = result.stdout.strip()
            # Return True if the output indicates success, False otherwise
            return output == "true"
        except subprocess.CalledProcessError as e:
            # Log the error for debugging purposes
            print(f"Prolog evaluation failed: {e}")
            return False
